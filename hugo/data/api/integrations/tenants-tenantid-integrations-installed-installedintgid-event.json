{"summary":"Create integration event","description":"Creates an integration event.\n\nEvents are used for sending certain notifications whenever an action is performed on OpsRamp entities.\n\n###### Notes\n\n- Provide API payload in Base64 encoding.\n- Integration event for Alert entity is created only using API but can be viewed from the OpsRamp Portal.\n\nCreate Event with Alert Entity Type to create an event with alert entity type for work flow events only.","operations":{"post":{"description":"","parameters":"","requestBody":{"content":"application/json","schema":{"title":"integrationEvent","type":"object","properties":{"id":{"type":"string"},"name":{"type":"string","description":"Name of the Integration event.\n"},"entity":{"type":"string","description":"Entity on which an action is performed. Supported entities include:\nService Desk\nINCIDENT\nSERVICEREQUEST\nCHANGE\nPROBLEM\nTASK\nResource\nAlert\nALERT (used only when eventType is selected as NONE)"},"eventType":{"type":"string","description":"Type of action performed on the entity. Supported values include:\nNONE (Used to invoke external integration through process workflow), CREATE, UPDATE, DELETE","enum":["NONE","CREATE","UPDATE","DELETE"]},"notifier":{"title":"notifier","type":"object","description":"The fields are required unless specific to an `authType`.","properties":{"type":{"type":"string","description":"Notification type.\n","enum":["REST_API","SOAP_API"]},"authType":{"type":"string","description":"Authentication type.\n","enum":["NONE","OAUTH2","JWT","BASIC"]},"grantType":{"type":"string","description":"Grant type for notification.\n","enum":["CLIENT_CREDENTIALS","PASSWORD","REFRESH_TOKEN"]},"userName":{"type":"string","description":"Username: Mandatory when authType is OAUTH2 and grantType is PASSWORD/REFRESH_TOKEN.\n"},"password":{"type":"string","description":"Password: Mandatory when authType is OAUTH2 and grantType is PASSWORD/REFRESH_TOKEN.\n"},"apiKey":{"type":"string","description":"API Key: Mandatory if authType is OAUTH2.\n"},"apiSecret":{"type":"string","description":"API Secret: Mandatory if authType is OAUTH2.\n"},"accessTokenURL":{"type":"string","description":"Access Token URL: Mandatory if authType is OAUTH2.\n"},"tokenPayload":{"type":"object","description":"(JWT only) Payload for the token."},"tokenURL":{"type":"string","description":"(JWT only) Access token URI.\n"},"tokenHeaders":{"type":"array","description":"(JWT only) Headers to request the token.\n","items":{"type":"object","properties":{"key":{"type":"string"},"value":{"type":"string"}}}},"tokensPath":{"type":"array","description":"(JWT only) Token path in the response of the authentication REST call.\n","items":{"type":"object","properties":{"key":{"type":"string"},"value":{"type":"string"}}}},"resourceAuthHeaders":{"description":"(JWT only) Authorization header for resource calls.\n","type":"array","items":{"type":"object","properties":{"key":{"type":"string"},"value":{"type":"string"}}}},"baseURI":{"type":"string"}}},"endPointURI":{"type":"string"},"headers":{"type":"array","items":{"type":"object","properties":{"key":{"type":"string"},"value":{"type":"string"}}}},"thirdPartyEventType":{"type":"string","description":"Type of action performed on the entity.Supported Values: POST, PUT, GET, DELETE, and PATCH","enum":["POST","PUT","GET","DELETE","PATCH"]},"payload":{"type":"string","description":"(Optional) Third-party integration event payload. Provide the third-party payload with OpsRamp placeholders to integrate the event between OpsRamp and third-party:\n- To get OpsRamp tokens, use refer to the Get Integration Event Placeholders API.\n- Convert the payload to base 64 and provide the file in the field file in the below sample request."},"filterCriteria":{"title":"filterCritera","type":"object","description":"(Optional) Filter entities on which the event is added to the rules:\n","properties":{"matchType":{"type":"string","enum":["ANY","ALL"],"description":"Match All or Any of the rules.\n"},"rules":{"type":"array","description":"Rules to filter the entities:\n","items":{"title":"rule","type":"object","properties":{"id":{"type":"integer"},"filterType":{"type":"string","description":"Filtered resource type.\n- AWS example: AUTO_SCALING, CLOUDFRONT, DYNAMO_DB, ANY_DEVICE, ELASTICACHE, ELASTICMAPREDUCE, KINESIS, LAMBDA, LOAD_BALANCER, MACHINE_LEARNING, RDS, REDSHIFT.\n- Azure example: EBS, WEBSITE, SQL_SERVER, SQL_DATABASE, RESOURCE_GROUP, REDIS_CACHE, DOCUMENT_DB.\n- Google example: ANY_CLOUD_RESOURCE, ANY_DEVICE, EBS, GCE_CLUSTER, SQL_SERVER, SQL_DATABASE, GCE_TOPIC, GCE_SUBSCRIPTION, GCE_ROUTER, VPN."},"key":{"type":"string","description":"Unique attribute name to filter the resource type. Example: Name, Region Name, Zone Name, Name, Subject, Description."},"value":{"type":"string","description":"Unique information of the resource."},"operator":{"type":"string","description":"Operating values to filter the resource type. Example: Contains, Not Contains, Equals, Not Equals, Starts with, Ends with, Regex, Is.","enum":["Contains","Not Contains","Equals","Not Equals","Starts with","Ends with","Regex"]},"resourceType":{"type":"string","description":""}}}},"id":{"type":"integer"},"name":{"type":"string"},"actions":{"type":"array","items":{"title":"action","type":"object","properties":{"action":{"type":"string"},"items":{"type":"array","items":{"type":"object","properties":{"item":{"type":"string"},"parameters":{"type":"object"},"instances":{"type":"object"}}}}}}}}},"useBaseNotifier":{"type":"boolean","description":"(Optional) Notification details to trigger events defined. To configure integration base notifier:\n- Provide useBaseNotifier: true to assign the notifier details to the event.\n- Provide useBaseNotifier: false to assign different notifier details"},"responseHeaders":{"type":"array","items":{"type":"object","properties":{"key":{"type":"string"},"value":{"type":"string"}}}},"depEvent":{"type":"object","properties":{"headers":{"type":"array","items":{"type":"object","properties":{"key":{"type":"string"},"value":{"type":"string"}}}},"payload":{"type":"string"},"depEndPointURI":{"type":"string"},"responseHeaders":{"type":"array","items":{"type":"object","properties":{"key":{"type":"string"},"value":{"type":"string"}}}}}}}}},"requestBodyExamples":{"example-create":{"value":{"name":"Create event","entity":"INCIDENT","eventType":"CREATE","notifier":{"type":"SOAP_API","baseURI":"www.google.com","authType":"OAUTH2","userName":"testUser","password":"test"},"endPointURI":"www.google.com/update","headers":[{"key":"accept","value":"application/json"},{"key":"Content-Type","value":"application/json"}],"thirdPartyEventType":"POST","payload":"ew0KInN1YmplY3QiOiIkaW5jaWRlbnQuc3ViamVjdCIsDQoiZGVzY3JpcHRpb24iOiIkaW5jaWRlbnQuaW1wYWN0IiwNCiJwcmlvcml0eSI6IiRpbmNpZGVudC5wcmlvcml0eS5uYW1lIg0KInN0YXV0cyI6ImhpZ2giDQp9"}},"example-create-with-filter":{"value":{"name":"Create event with policy","entity":"INCIDENT","eventType":"CREATE","filterCriteria":{"matchType":"ANY","rules":[{"key":"Subject","operator":"Contains","value":"test","resourceType":"INCIDENT"},{"key":"Description","operator":"Contains","value":"testing","resourceType":"INCIDENT"}]},"notifier":{"type":"SOAP_API","baseURI":"www.google.com","authType":"OAUTH2","userName":"testUser","password":"test"},"endPointURI":"www.google.com/update","headers":[{"key":"accept","value":"application/json"},{"key":"Content-Type","value":"application/json"}],"thirdPartyEventType":"POST","payload":"ew0KInN1YmplY3QiOiIkaW5jaWRlbnQuc3ViamVjdCIsDQoiZGVzY3JpcHRpb24iOiIkaW5jaWRlbnQuaW1wYWN0IiwNCiJwcmlvcml0eSI6IiRpbmNpZGVudC5wcmlvcml0eS5uYW1lIg0KInN0YXV0cyI6ImhpZ2giDQp9"}},"example-create-alert-entity":{"value":{"name":"Alert event test","entity":"ALERT","eventType":"CREATE","notifier":{"type":"SOAP_API","baseURI":"www.google.com","authType":"OAUTH2","userName":"testUser","password":"test"},"endPointURI":"www.google.com/update","headers":[{"key":"accept","value":"application/json"},{"key":"Content-Type","value":"application/json"}],"thirdPartyEventType":"POST","payload":"ewoJInNlcnZpY2VOYW1lIjoiJGFsZXJ0LnNlcnZpY2VOYW1lIiwKCSJyZXNvdXJjZSI6ewoJCSJpZCI6IiRhbGVydC5yZXNvdXJjZUlkIgoJfSwKCSJzdWJqZWN0IjoiJGFsZXJ0LnN1YmplY3QiLAogICAgICAgICJjdXJyZW50U3RhdGUiOiIkYWxlcnQuY3VycmVudFN0YXRlIiwKCSJhcHAiOiJPUFNSQU1QIgp9"}}},"responses":{"200":{"description":"OK","schema":{"type":"object","properties":{}},"examples":{"example-create":{"value":{"id":"INTG-EVENT-debdf8a2-6986-4398-adfc-e50b185d049a","name":"Create event","entity":"INCIDENT","notifier":{"baseURI":"www.google.com/update","authType":"OAUTH2","userName":"testUser"},"headers":[{"key":"accept","value":"application/json"},{"key":"Content-Type","value":"application/json"}],"eventPayload":"{\r\n'subject':'$incident.subject',\r\n'description':'$incident.impact',\r\n'priority':'$incident.priority.name'\r\n}"}},"example-create-with-filter":{"value":{"id":"INTG-EVENT-717000e9-bc95-4339-adf7-db7a43db2580","name":"Create event with policy","entity":"INCIDENT","filterCriteria":{"id":140,"name":"Create event with policy","matchType":"ALL","rules":[{"id":579,"key":"Subject","operator":"Contains","value":"test","resourceType":"INCIDENT"},{"id":580,"key":"Description","operator":"Contains","value":"testing","resourceType":"INCIDENT"}],"actions":[]},"notifier":{"baseURI":"www.google.com/update","authType":"OAUTH2","userName":"testUser"},"headers":[{"key":"accept","value":"application/json"},{"key":"Content-Type","value":"application/json"}],"eventPayload":"{\r\n'subject':'$incident.subject',\r\n'description':'$incident.impact',\r\n'priority':'$incident.priority.name'\r\n'stauts':'high'\r\n}"}},"example-create-alert-entity":{"value":{"id":"INTG-EVENT-61301956-5a04-405e-9ee1-03f62595ca05","name":"Alert event test","entity":"ALERT","notifier":{"baseURI":"www.google.com/update","authType":"OAUTH2","userName":"testUser"},"thirdPartyEventType":"POST","headers":[{"key":"accept","value":"application/json"},{"key":"Content-Type","value":"application/json"}],"eventPayload":"{\n\t'serviceName':'$alert.serviceName',\n\t'resource':{\n\t\t'id':'$alert.resourceId'\n\t},\n\t'subject':'$alert.subject',\n        'currentState':'$alert.currentState',\n\t'app':'OPSRAMP'\n}"}}}}}}},"parameters":[{"in":"path","name":"tenantId","schema":{"type":"string"},"description":"Describes the client ID or msp ID of the tenant","required":true},{"name":"installedIntgId","in":"path","required":true,"schema":{"type":"string","format":"uuid"},"description":"Unique Identifier of the installed integration"}]}