{"summary":"Manage integration event","description":"Updates, gets, and deletes an integration event.","operations":{"delete":{"description":"","parameters":"","responses":{"200":{"description":"OK"}}},"post":{"description":"","parameters":"","requestBody":{"content":"application/json","schema":{"title":"integrationEvent","type":"object","properties":{"id":{"type":"string"},"name":{"type":"string","description":"Name of the Integration event.\n"},"entity":{"type":"string","description":"Entity on which an action is performed. Supported entities include:\nService Desk\nINCIDENT\nSERVICEREQUEST\nCHANGE\nPROBLEM\nTASK\nResource\nAlert\nALERT (used only when eventType is selected as NONE)"},"eventType":{"type":"string","description":"Type of action performed on the entity. Supported values include:\nNONE (Used to invoke external integration through process workflow), CREATE, UPDATE, DELETE","enum":["NONE","CREATE","UPDATE","DELETE"]},"notifier":{"title":"notifier","type":"object","description":"The fields are required unless specific to an `authType`.","properties":{"type":{"type":"string","description":"Notification type.\n","enum":["REST_API","SOAP_API"]},"authType":{"type":"string","description":"Authentication type.\n","enum":["NONE","OAUTH2","JWT","BASIC"]},"grantType":{"type":"string","description":"Grant type for notification.\n","enum":["CLIENT_CREDENTIALS","PASSWORD","REFRESH_TOKEN"]},"userName":{"type":"string","description":"Username: Mandatory when authType is OAUTH2 and grantType is PASSWORD/REFRESH_TOKEN.\n"},"password":{"type":"string","description":"Password: Mandatory when authType is OAUTH2 and grantType is PASSWORD/REFRESH_TOKEN.\n"},"apiKey":{"type":"string","description":"API Key: Mandatory if authType is OAUTH2.\n"},"apiSecret":{"type":"string","description":"API Secret: Mandatory if authType is OAUTH2.\n"},"accessTokenURL":{"type":"string","description":"Access Token URL: Mandatory if authType is OAUTH2.\n"},"tokenPayload":{"type":"object","description":"(JWT only) Payload for the token."},"tokenURL":{"type":"string","description":"(JWT only) Access token URI.\n"},"tokenHeaders":{"type":"array","description":"(JWT only) Headers to request the token.\n","items":{"type":"object","properties":{"key":{"type":"string"},"value":{"type":"string"}}}},"tokensPath":{"type":"array","description":"(JWT only) Token path in the response of the authentication REST call.\n","items":{"type":"object","properties":{"key":{"type":"string"},"value":{"type":"string"}}}},"resourceAuthHeaders":{"description":"(JWT only) Authorization header for resource calls.\n","type":"array","items":{"type":"object","properties":{"key":{"type":"string"},"value":{"type":"string"}}}},"baseURI":{"type":"string"}}},"endPointURI":{"type":"string"},"headers":{"type":"array","items":{"type":"object","properties":{"key":{"type":"string"},"value":{"type":"string"}}}},"thirdPartyEventType":{"type":"string","description":"Type of action performed on the entity.Supported Values: POST, PUT, GET, DELETE, and PATCH","enum":["POST","PUT","GET","DELETE","PATCH"]},"payload":{"type":"string","description":"(Optional) Third-party integration event payload. Provide the third-party payload with OpsRamp placeholders to integrate the event between OpsRamp and third-party:\n- To get OpsRamp tokens, use refer to the Get Integration Event Placeholders API.\n- Convert the payload to base 64 and provide the file in the field file in the below sample request."},"filterCriteria":{"title":"filterCritera","type":"object","description":"(Optional) Filter entities on which the event is added to the rules:\n","properties":{"matchType":{"type":"string","enum":["ANY","ALL"],"description":"Match All or Any of the rules.\n"},"rules":{"type":"array","description":"Rules to filter the entities:\n","items":{"title":"rule","type":"object","properties":{"id":{"type":"integer"},"filterType":{"type":"string","description":"Filtered resource type.\n- AWS example: AUTO_SCALING, CLOUDFRONT, DYNAMO_DB, ANY_DEVICE, ELASTICACHE, ELASTICMAPREDUCE, KINESIS, LAMBDA, LOAD_BALANCER, MACHINE_LEARNING, RDS, REDSHIFT.\n- Azure example: EBS, WEBSITE, SQL_SERVER, SQL_DATABASE, RESOURCE_GROUP, REDIS_CACHE, DOCUMENT_DB.\n- Google example: ANY_CLOUD_RESOURCE, ANY_DEVICE, EBS, GCE_CLUSTER, SQL_SERVER, SQL_DATABASE, GCE_TOPIC, GCE_SUBSCRIPTION, GCE_ROUTER, VPN."},"key":{"type":"string","description":"Unique attribute name to filter the resource type. Example: Name, Region Name, Zone Name, Name, Subject, Description."},"value":{"type":"string","description":"Unique information of the resource."},"operator":{"type":"string","description":"Operating values to filter the resource type. Example: Contains, Not Contains, Equals, Not Equals, Starts with, Ends with, Regex, Is.","enum":["Contains","Not Contains","Equals","Not Equals","Starts with","Ends with","Regex"]},"resourceType":{"type":"string","description":""}}}},"id":{"type":"integer"},"name":{"type":"string"},"actions":{"type":"array","items":{"title":"action","type":"object","properties":{"action":{"type":"string"},"items":{"type":"array","items":{"type":"object","properties":{"item":{"type":"string"},"parameters":{"type":"object"},"instances":{"type":"object"}}}}}}}}},"useBaseNotifier":{"type":"boolean","description":"(Optional) Notification details to trigger events defined. To configure integration base notifier:\n- Provide useBaseNotifier: true to assign the notifier details to the event.\n- Provide useBaseNotifier: false to assign different notifier details"},"responseHeaders":{"type":"array","items":{"type":"object","properties":{"key":{"type":"string"},"value":{"type":"string"}}}},"depEvent":{"type":"object","properties":{"headers":{"type":"array","items":{"type":"object","properties":{"key":{"type":"string"},"value":{"type":"string"}}}},"payload":{"type":"string"},"depEndPointURI":{"type":"string"},"responseHeaders":{"type":"array","items":{"type":"object","properties":{"key":{"type":"string"},"value":{"type":"string"}}}}}}}}},"requestBodyExamples":{"example-1":{"value":{"name":"Create event with policy and dep updated","entity":"INCIDENT","eventType":"CREATE","filterCriteria":{"id":141,"matchType":"ANY","rules":[{"id":581,"key":"Subject","operator":"Contains","value":"test","resourceType":"INCIDENT"},{"id":582,"key":"Description","operator":"Contains","value":"testing","resourceType":"INCIDENT"}]},"notifier":{"type":"SOAP_API","baseURI":"www.google.com","authType":"BASIC","userName":"testUser","password":"test"},"headers":[{"key":"accept","value":"application/json"},{"key":"Content-Type","value":"application/json"}],"thirdPartyEventType":"POST","payload":"ew0KInN1YmplY3QiOiIkaW5jaWRlbnQuc3ViamVjdCIsDQoiZGVzY3JpcHRpb24iOiIkaW5jaWRlbnQuaW1wYWN0IiwNCiJwcmlvcml0eSI6IiRpbmNpZGVudC5wcmlvcml0eS5uYW1lIg0KInN0YXV0cyI6ImhpZ2giDQp9"}}},"responses":{"200":{"description":"OK","schema":{"title":"integrationEvent","type":"object","properties":{"id":{"type":"string"},"name":{"type":"string","description":"Name of the Integration event.\n"},"entity":{"type":"string","description":"Entity on which an action is performed. Supported entities include:\nService Desk\nINCIDENT\nSERVICEREQUEST\nCHANGE\nPROBLEM\nTASK\nResource\nAlert\nALERT (used only when eventType is selected as NONE)"},"eventType":{"type":"string","description":"Type of action performed on the entity. Supported values include:\nNONE (Used to invoke external integration through process workflow), CREATE, UPDATE, DELETE","enum":["NONE","CREATE","UPDATE","DELETE"]},"notifier":{"title":"notifier","type":"object","description":"The fields are required unless specific to an `authType`.","properties":{"type":{"type":"string","description":"Notification type.\n","enum":["REST_API","SOAP_API"]},"authType":{"type":"string","description":"Authentication type.\n","enum":["NONE","OAUTH2","JWT","BASIC"]},"grantType":{"type":"string","description":"Grant type for notification.\n","enum":["CLIENT_CREDENTIALS","PASSWORD","REFRESH_TOKEN"]},"userName":{"type":"string","description":"Username: Mandatory when authType is OAUTH2 and grantType is PASSWORD/REFRESH_TOKEN.\n"},"password":{"type":"string","description":"Password: Mandatory when authType is OAUTH2 and grantType is PASSWORD/REFRESH_TOKEN.\n"},"apiKey":{"type":"string","description":"API Key: Mandatory if authType is OAUTH2.\n"},"apiSecret":{"type":"string","description":"API Secret: Mandatory if authType is OAUTH2.\n"},"accessTokenURL":{"type":"string","description":"Access Token URL: Mandatory if authType is OAUTH2.\n"},"tokenPayload":{"type":"object","description":"(JWT only) Payload for the token."},"tokenURL":{"type":"string","description":"(JWT only) Access token URI.\n"},"tokenHeaders":{"type":"array","description":"(JWT only) Headers to request the token.\n","items":{"type":"object","properties":{"key":{"type":"string"},"value":{"type":"string"}}}},"tokensPath":{"type":"array","description":"(JWT only) Token path in the response of the authentication REST call.\n","items":{"type":"object","properties":{"key":{"type":"string"},"value":{"type":"string"}}}},"resourceAuthHeaders":{"description":"(JWT only) Authorization header for resource calls.\n","type":"array","items":{"type":"object","properties":{"key":{"type":"string"},"value":{"type":"string"}}}},"baseURI":{"type":"string"}}},"endPointURI":{"type":"string"},"headers":{"type":"array","items":{"type":"object","properties":{"key":{"type":"string"},"value":{"type":"string"}}}},"thirdPartyEventType":{"type":"string","description":"Type of action performed on the entity.Supported Values: POST, PUT, GET, DELETE, and PATCH","enum":["POST","PUT","GET","DELETE","PATCH"]},"payload":{"type":"string","description":"(Optional) Third-party integration event payload. Provide the third-party payload with OpsRamp placeholders to integrate the event between OpsRamp and third-party:\n- To get OpsRamp tokens, use refer to the Get Integration Event Placeholders API.\n- Convert the payload to base 64 and provide the file in the field file in the below sample request."},"filterCriteria":{"title":"filterCritera","type":"object","description":"(Optional) Filter entities on which the event is added to the rules:\n","properties":{"matchType":{"type":"string","enum":["ANY","ALL"],"description":"Match All or Any of the rules.\n"},"rules":{"type":"array","description":"Rules to filter the entities:\n","items":{"title":"rule","type":"object","properties":{"id":{"type":"integer"},"filterType":{"type":"string","description":"Filtered resource type.\n- AWS example: AUTO_SCALING, CLOUDFRONT, DYNAMO_DB, ANY_DEVICE, ELASTICACHE, ELASTICMAPREDUCE, KINESIS, LAMBDA, LOAD_BALANCER, MACHINE_LEARNING, RDS, REDSHIFT.\n- Azure example: EBS, WEBSITE, SQL_SERVER, SQL_DATABASE, RESOURCE_GROUP, REDIS_CACHE, DOCUMENT_DB.\n- Google example: ANY_CLOUD_RESOURCE, ANY_DEVICE, EBS, GCE_CLUSTER, SQL_SERVER, SQL_DATABASE, GCE_TOPIC, GCE_SUBSCRIPTION, GCE_ROUTER, VPN."},"key":{"type":"string","description":"Unique attribute name to filter the resource type. Example: Name, Region Name, Zone Name, Name, Subject, Description."},"value":{"type":"string","description":"Unique information of the resource."},"operator":{"type":"string","description":"Operating values to filter the resource type. Example: Contains, Not Contains, Equals, Not Equals, Starts with, Ends with, Regex, Is.","enum":["Contains","Not Contains","Equals","Not Equals","Starts with","Ends with","Regex"]},"resourceType":{"type":"string","description":""}}}},"id":{"type":"integer"},"name":{"type":"string"},"actions":{"type":"array","items":{"title":"action","type":"object","properties":{"action":{"type":"string"},"items":{"type":"array","items":{"type":"object","properties":{"item":{"type":"string"},"parameters":{"type":"object"},"instances":{"type":"object"}}}}}}}}},"useBaseNotifier":{"type":"boolean","description":"(Optional) Notification details to trigger events defined. To configure integration base notifier:\n- Provide useBaseNotifier: true to assign the notifier details to the event.\n- Provide useBaseNotifier: false to assign different notifier details"},"responseHeaders":{"type":"array","items":{"type":"object","properties":{"key":{"type":"string"},"value":{"type":"string"}}}},"depEvent":{"type":"object","properties":{"headers":{"type":"array","items":{"type":"object","properties":{"key":{"type":"string"},"value":{"type":"string"}}}},"payload":{"type":"string"},"depEndPointURI":{"type":"string"},"responseHeaders":{"type":"array","items":{"type":"object","properties":{"key":{"type":"string"},"value":{"type":"string"}}}}}}}},"examples":{"example-1":{"value":{"id":"INTG-EVENT-c6d30f9c-2728-4760-ad97-8f3b6f2b6391","name":"Create event with policy and dep updated","entity":"INCIDENT","filterCriteria":{"id":141,"name":"Create event with policy and dep","matchType":"ANY","rules":[{"id":581,"key":"Subject","operator":"Contains","value":"test","resourceType":"INCIDENT"},{"id":582,"key":"Description","operator":"Contains","value":"testing","resourceType":"INCIDENT"}],"actions":[]},"notifier":{"baseURI":"www.google.com","authType":"BASIC","userName":"testUser"},"headers":[{"key":"accept","value":"application/json"},{"key":"Content-Type","value":"application/json"}],"eventPayload":"{\r\n'subject':'$incident.subject',\r\n'description':'$incident.impact',\r\n'priority':'$incident.priority.name'\r\n'stauts':'high'\r\n}"}}}}}},"get":{"description":"","parameters":"","responses":{"200":{"description":"OK","schema":{"title":"integrationEvent","type":"object","properties":{"id":{"type":"string"},"name":{"type":"string","description":"Name of the Integration event.\n"},"entity":{"type":"string","description":"Entity on which an action is performed. Supported entities include:\nService Desk\nINCIDENT\nSERVICEREQUEST\nCHANGE\nPROBLEM\nTASK\nResource\nAlert\nALERT (used only when eventType is selected as NONE)"},"eventType":{"type":"string","description":"Type of action performed on the entity. Supported values include:\nNONE (Used to invoke external integration through process workflow), CREATE, UPDATE, DELETE","enum":["NONE","CREATE","UPDATE","DELETE"]},"notifier":{"title":"notifier","type":"object","description":"The fields are required unless specific to an `authType`.","properties":{"type":{"type":"string","description":"Notification type.\n","enum":["REST_API","SOAP_API"]},"authType":{"type":"string","description":"Authentication type.\n","enum":["NONE","OAUTH2","JWT","BASIC"]},"grantType":{"type":"string","description":"Grant type for notification.\n","enum":["CLIENT_CREDENTIALS","PASSWORD","REFRESH_TOKEN"]},"userName":{"type":"string","description":"Username: Mandatory when authType is OAUTH2 and grantType is PASSWORD/REFRESH_TOKEN.\n"},"password":{"type":"string","description":"Password: Mandatory when authType is OAUTH2 and grantType is PASSWORD/REFRESH_TOKEN.\n"},"apiKey":{"type":"string","description":"API Key: Mandatory if authType is OAUTH2.\n"},"apiSecret":{"type":"string","description":"API Secret: Mandatory if authType is OAUTH2.\n"},"accessTokenURL":{"type":"string","description":"Access Token URL: Mandatory if authType is OAUTH2.\n"},"tokenPayload":{"type":"object","description":"(JWT only) Payload for the token."},"tokenURL":{"type":"string","description":"(JWT only) Access token URI.\n"},"tokenHeaders":{"type":"array","description":"(JWT only) Headers to request the token.\n","items":{"type":"object","properties":{"key":{"type":"string"},"value":{"type":"string"}}}},"tokensPath":{"type":"array","description":"(JWT only) Token path in the response of the authentication REST call.\n","items":{"type":"object","properties":{"key":{"type":"string"},"value":{"type":"string"}}}},"resourceAuthHeaders":{"description":"(JWT only) Authorization header for resource calls.\n","type":"array","items":{"type":"object","properties":{"key":{"type":"string"},"value":{"type":"string"}}}},"baseURI":{"type":"string"}}},"endPointURI":{"type":"string"},"headers":{"type":"array","items":{"type":"object","properties":{"key":{"type":"string"},"value":{"type":"string"}}}},"thirdPartyEventType":{"type":"string","description":"Type of action performed on the entity.Supported Values: POST, PUT, GET, DELETE, and PATCH","enum":["POST","PUT","GET","DELETE","PATCH"]},"payload":{"type":"string","description":"(Optional) Third-party integration event payload. Provide the third-party payload with OpsRamp placeholders to integrate the event between OpsRamp and third-party:\n- To get OpsRamp tokens, use refer to the Get Integration Event Placeholders API.\n- Convert the payload to base 64 and provide the file in the field file in the below sample request."},"filterCriteria":{"title":"filterCritera","type":"object","description":"(Optional) Filter entities on which the event is added to the rules:\n","properties":{"matchType":{"type":"string","enum":["ANY","ALL"],"description":"Match All or Any of the rules.\n"},"rules":{"type":"array","description":"Rules to filter the entities:\n","items":{"title":"rule","type":"object","properties":{"id":{"type":"integer"},"filterType":{"type":"string","description":"Filtered resource type.\n- AWS example: AUTO_SCALING, CLOUDFRONT, DYNAMO_DB, ANY_DEVICE, ELASTICACHE, ELASTICMAPREDUCE, KINESIS, LAMBDA, LOAD_BALANCER, MACHINE_LEARNING, RDS, REDSHIFT.\n- Azure example: EBS, WEBSITE, SQL_SERVER, SQL_DATABASE, RESOURCE_GROUP, REDIS_CACHE, DOCUMENT_DB.\n- Google example: ANY_CLOUD_RESOURCE, ANY_DEVICE, EBS, GCE_CLUSTER, SQL_SERVER, SQL_DATABASE, GCE_TOPIC, GCE_SUBSCRIPTION, GCE_ROUTER, VPN."},"key":{"type":"string","description":"Unique attribute name to filter the resource type. Example: Name, Region Name, Zone Name, Name, Subject, Description."},"value":{"type":"string","description":"Unique information of the resource."},"operator":{"type":"string","description":"Operating values to filter the resource type. Example: Contains, Not Contains, Equals, Not Equals, Starts with, Ends with, Regex, Is.","enum":["Contains","Not Contains","Equals","Not Equals","Starts with","Ends with","Regex"]},"resourceType":{"type":"string","description":""}}}},"id":{"type":"integer"},"name":{"type":"string"},"actions":{"type":"array","items":{"title":"action","type":"object","properties":{"action":{"type":"string"},"items":{"type":"array","items":{"type":"object","properties":{"item":{"type":"string"},"parameters":{"type":"object"},"instances":{"type":"object"}}}}}}}}},"useBaseNotifier":{"type":"boolean","description":"(Optional) Notification details to trigger events defined. To configure integration base notifier:\n- Provide useBaseNotifier: true to assign the notifier details to the event.\n- Provide useBaseNotifier: false to assign different notifier details"},"responseHeaders":{"type":"array","items":{"type":"object","properties":{"key":{"type":"string"},"value":{"type":"string"}}}},"depEvent":{"type":"object","properties":{"headers":{"type":"array","items":{"type":"object","properties":{"key":{"type":"string"},"value":{"type":"string"}}}},"payload":{"type":"string"},"depEndPointURI":{"type":"string"},"responseHeaders":{"type":"array","items":{"type":"object","properties":{"key":{"type":"string"},"value":{"type":"string"}}}}}}}},"examples":{"example-1":{"value":{"id":"INTG-EVENT-0e85ed91-35b7-4fe8-a702-45fab935961c","name":"Ticket create event","entity":"INCIDENT","notifier":{"baseURI":"https://urportal.com/create/tkt"},"headers":[{"key":"Accept","value":"application/json"},{"key":"Content-Type","value":"application/json"}],"payload":"{\n'subject':'$incident.subject',\n'description':'$incident.impact',\n'priority':'$incident.priority.name'\n}","responseHeaders":[{"key":"extTicketId","value":"$id"},{"key":"Error Message","value":"$err"}],"depEvent":{"headers":[{"key":"Accept","value":"application/json"},{"key":"Content-Type","value":"application/json"}],"payload":"{\n'attach':'$attach.id'\n}","depEndPointURI":"https://urportal.com/create/tkt/attachment","responseHeaders":[{"key":"id","value":"$attch.id"}]}}}}}}}},"parameters":[{"in":"path","name":"tenantId","schema":{"type":"string"},"description":"Describes the client ID or msp ID of the tenant","required":true},{"name":"installedIntgId","in":"path","required":true,"schema":{"type":"string","format":"uuid"},"description":"Unique Identifier of the installed integration"},{"name":"eventId","in":"path","required":true,"schema":{"type":"string","format":"uuid"},"description":"The unique ID of an event related to  the integration"}]}