components:
  schemas:
    problem:
      title: problem
      type: object
      properties:
        id:
          type: string
        subject:
          type: string
          description: |
            Subject of the problem.
        description:
          type: string
          description: |
            Description of the problem.
        status:
          type: string
          description: |-
            Status of problem. Follow the steps to update the status of problem:

            1. Use the get problem API to check:
            2. Status flow transitions of problem.The status flows are defined in the field allowedStatus.
            Example: "name" : "Update"
            3. Option to provide reasons to change the status is enabled."reasonsEnabled" : "true" indicates, reason is mandatory while changing the status."reasonsEnabled" : "false" indicates reason is optional.
            4. If status change reasons are defined, use the get status change reasons to get the list of reasons. Provide the reasons configured in status "Update".
        oldStatus:
          type: string
        priority:
          type: string
          description: |
            Priority of the problem.
        oldPriority:
          type: string
        requester:
          $ref: '#/components/schemas/user'
        assignedUser:
          $ref: '#/components/schemas/user'
        assigneeGroup:
          $ref: '#/components/schemas/group'
        resources:
          type: array
          items:
            $ref: '#/components/schemas/resource'
        extTicketId:
          type: string
          description: Attach an external ticket ID to the problem.
        customFields:
          type: array
          items:
            $ref: '#/components/schemas/customField'
        cc:
          type: string
          description: Cc email.
        ticketArisedTime:
          type: string
        createdUser:
          $ref: '#/components/schemas/user'
        category:
          type: object
          properties:
            id:
              type: integer
            name:
              type: string
        reason:
          type: string
        alertIds:
          type: array
          items: {}
        reOpenCount:
          type: integer
        createdDate:
          type: string
          format: date-time
        allowedStatus:
          type: array
          items:
            $ref: '#/components/schemas/status'
        client:
          $ref: '#/components/schemas/client'
        subCategory:
          type: object
          properties:
            id:
              type: integer
            name:
              type: string
        updatedDate:
          type: string
          format: date-time
        priorityUpdatedBy:
          $ref: '#/components/schemas/user'
        priorityUpdatedDate:
          type: string
          format: date-time
        statusUpdatedBy:
          $ref: '#/components/schemas/user'
        statusUpdatedDate:
          type: string
          format: date-time
        resolvedDate:
          type: string
          format: date-time
        slaDetails:
          $ref: '#/components/schemas/slaDetails'
        source:
          type: string
        rootCause:
          type: string
          description: Root cause of the problem.
        workaround:
          type: string
          description: Temporary solution to solve the problem.
        application:
          type: string
          description: |
            Application from which the problem is generated.
        statusFlow:
          type: array
          items:
            $ref: '#/components/schemas/statusHistory'
        knowledgeArticleIds:
          type: array
          description: |-
            (Optional) Attach knowledge base articles related to the problem for further reference. To get a knowledge base article ID:
            1. Log into OpsRamp.
            2. Click Knowledge Base.
            3. Select the required article and then copy the article ID.
            4. Provide the article ID in "knowledgeArticleIds" field.
            Example: "knowledgeArticleIds": 25, 16.
          items:
            type: integer
        attachedArticles:
          type: array
          items:
            type: object
            properties:
              id:
                type: integer
              subject:
                type: string
        estimatedHours:
          type: integer
          description: 'Estimated time for resolving a problem. For example, a user estimates 3 hours for completion of a problem, the user provides value as "estimatedHours": "3".'
        estimatedMinutes:
          type: integer
          description: 'Estimated time for resolving a problem. For example, a user estimates 45 minutes for completion of a task, then user provides value as "estimatedMinutes": "45".'
        timeSpent:
          type: integer
        notes:
          type: string
        closedSummary:
          type: string
        suspendEndDate:
          type: string
          format: date-time
        closedDate:
          type: string
        tags:
          type: string
        changeRequest:
          description: Attach a problem related to the problem.
          type: object
          properties:
            id:
              type: string
        knownIssue:
          type: boolean
        attachments:
          type: array
          items:
            $ref: '#/components/schemas/attachment'
        channelId:
          type: integer
    user:
      title: user
      type: object
      properties:
        id:
          type: string
        loginName:
          type: string
        lastName:
          type: string
        firstName:
          type: string
        email:
          type: string
        phoneNumber:
          type: string
    group:
      title: group
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        description:
          type: string
        userCount:
          type: integer
    resource:
      title: resource
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        type:
          type: string
        metaData:
          type: object
        resourceType:
          type: string
        hostName:
          type: string
        resourceName:
          type: string
        aliasName:
          type: string
    customField:
      title: customField
      type: object
      description: User-defined fields. User can create additional fields to attach more information related to the change request. Create a custom field and use the get change request custom fields get the list of the customized fields for change request.
      properties:
        id:
          type: string
        classCode:
          type: string
        displayLabel:
          type: string
        name:
          type: string
        fieldType:
          type: string
        mandatory:
          type: boolean
        editable:
          type: boolean
        description:
          type: string
        value:
          type: string
        defaultValue:
          type: string
        options:
          type: array
          items:
            type: object
            properties:
              label:
                type: string
              value:
                type: string
        selectedOption:
          type: object
          properties:
            label:
              type: string
            value:
              type: string
        customField:
          type: boolean
    status:
      title: status
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        reasonsEnabled:
          type: boolean
        reasonsDefined:
          type: boolean
    client:
      title: client
      type: object
      properties:
        id:
          type: integer
        uniqueId:
          type: string
        name:
          type: string
        activated:
          type: boolean
        updatedTime:
          type: string
        createdTime:
          type: string
          format: date-time
    slaDetails:
      title: slaDetails
      type: object
      properties:
        resolutionTime:
          type: integer
        responseTime:
          type: integer
        responseBreach:
          type: boolean
        resolutionBreach:
          type: boolean
        responseBreachDate:
          type: string
        resolutionBreachDate:
          type: string
        slaPolicy:
          $ref: '#/components/schemas/slaPolicy'
    statusHistory:
      title: statusHistory
      type: object
      properties:
        status:
          type: string
        timeSpent:
          type: integer
        createdDate:
          type: string
          format: date-time
        updatedBy:
          $ref: '#/components/schemas/user'
        reason:
          type: string
        notes:
          type: string
    businessImpact:
      title: businessImpact
      type: object
      properties:
        uniqueId:
          type: string
        name:
          type: string
          description: |
            Business impact name.
        description:
          type: string
          description: |
            (Optional) Short summary describing the business impact.
        createdBy:
          $ref: '#/components/schemas/user'
        updatedBy:
          $ref: '#/components/schemas/user'
        createdDate:
          type: string
          format: date-time
        updatedDate:
          type: string
          format: date-time
    activity:
      title: activity
      type: object
      properties:
        activity:
          type: string
        htmlLog:
          type: array
          items:
            type: string
        createdTime:
          type: string
          format: date-time
        logType:
          type: string
        createdBy:
          $ref: '#/components/schemas/user'
        changeLog:
          type: array
          items:
            type: object
            properties:
              attribute:
                type: string
              oldValue:
                type: string
              newValue:
                type: string
    changeRequestResponse:
      title: changeRequestResponse
      type: object
      properties:
        description:
          type: string
          description: |
            Short summary describing the response.
        internal:
          type: string
          description: |-
            (Optional) Represents the visibility of the response:

            Setting internal=true represents visibility of response within the organization

            Setting internal=false represents visibility of response to all users
        tags:
          type: string
          description: |
            (Optional) Labels attached to the response.
        creator:
          $ref: '#/components/schemas/user'
        attachments:
          type: array
          description: |
            (Optional) Attachments for the particular response.
          items:
            type: object
            properties:
              name:
                type: string
              file:
                type: string
        hasAttachments:
          type: boolean
        createdDate:
          type: string
          format: date-time
      description: ' If internal=true, creator is mandatory.'
    changeRequest:
      title: changeRequest
      type: object
      properties:
        id:
          type: string
        subject:
          type: string
          description: |
            Ticket subject.
        description:
          type: string
          description: |
            Ticket description.
        priority:
          type: string
          description: |
            Ticket priority with supported priority values: Low, Normal, High, Urgent, and Very Low.
        extTicketId:
          type: string
          description: Attach third party ticket ID.
        changePlan:
          type: string
          description: |
            Description of the change plan.
        rollbackPlan:
          type: string
          description: |
            Description of roll back plan.
        testPlan:
          type: string
          description: |
            Description of test plan.
        plannedStart:
          type: string
          format: date-time
        plannedEnd:
          type: string
          format: date-time
        workStart:
          type: string
          format: date-time
        workEnd:
          type: string
          format: date-time
        cc:
          type: string
          description: Cc email.
        category:
          type: object
          description: Add the change request under a category. Use the get API to get the list of categories.
          properties:
            id:
              type: integer
        subCategory:
          type: object
          description: Add the change request under a sub-category. Use get categories to get the list of sub-categories.
          properties:
            id:
              type: integer
        changeType:
          type: string
          description: 'Normal or Emergency depending on the Priority of a change request. For example, create a change type Emergency for change requests that must be processed immediately or if Priority of a request is High.'
        assigneeGroup:
          $ref: '#/components/schemas/group'
        channelId:
          type: string
        tags:
          type: string
        location:
          type: string
        assignedUser:
          $ref: '#/components/schemas/user'
        requester:
          $ref: '#/components/schemas/user'
        resources:
          type: array
          items:
            $ref: '#/components/schemas/resource'
        customFields:
          type: array
          items:
            $ref: '#/components/schemas/customField'
        attachments:
          type: array
          description: Attach files related to the change request. Convert attachment files to byte stream with base64-encoding. The file size limit of an attachment is 50 MB.
          items:
            type: object
            properties:
              name:
                type: string
              file:
                type: string
        knowledgeArticleIds:
          type: array
          description: |-
            Attach knowledge base articles related to the change request for further reference. To get a knowledge base article ID:
            1. Log into OpsRamp.
            2. Click Knowledge Base.
            3. Select the required article and then copy the article ID.
            4. Provide the article ID in "knowledgeArticleIds" field.

            Example: "knowledgeArticleIds": 25, 16.
          items:
            type: integer
        oldStatus:
          type: string
        oldPriority:
          type: string
        ticketArisedTime:
          type: string
        createdUser:
          $ref: '#/components/schemas/user'
        alertIds:
          type: array
          items: {}
        createdDate:
          type: string
          format: date-time
        allowedStatus:
          type: array
          items:
            $ref: '#/components/schemas/status'
        client:
          $ref: '#/components/schemas/client'
        updatedDate:
          type: string
          format: date-time
        priorityUpdatedBy:
          $ref: '#/components/schemas/user'
        priorityUpdatedDate:
          type: string
          format: date-time
        statusUpdatedBy:
          $ref: '#/components/schemas/user'
        statusUpdatedDate:
          type: string
          format: date-time
        slaDetails:
          $ref: '#/components/schemas/slaDetails'
        source:
          type: string
        statusFlow:
          type: array
          items:
            $ref: '#/components/schemas/statusHistory'
        attachedArticles:
          type: array
          items:
            type: object
            properties:
              id:
                type: integer
              subject:
                type: string
      required:
        - subject
        - description
        - priority
        - changePlan
        - rollbackPlan
        - testPlan
    incidentResponse:
      title: incidentResponse
      type: object
      properties:
        description:
          type: string
        internal:
          type: boolean
        creator:
          $ref: '#/components/schemas/user'
        tags:
          type: string
        attachments:
          type: array
          items:
            $ref: '#/components/schemas/attachment'
        extTicketResponseId:
          type: string
        createdDate:
          type: string
          format: date-time
        hasAttachments:
          type: boolean
        timeSpent:
          type: integer
    attachment:
      title: attachment
      type: object
      properties:
        name:
          type: string
        file:
          type: string
        id:
          type: integer
        createdDate:
          type: string
          format: date-time
        contentURL:
          type: string
    incident:
      title: incident
      type: object
      description: ''
      properties:
        alertIds:
          type: array
          items: {}
        allowedStatus:
          type: array
          items:
            $ref: '#/components/schemas/status'
        assignedUser:
          $ref: '#/components/schemas/user'
        assigneeGroup:
          $ref: '#/components/schemas/group'
        attachedArticles:
          type: array
          items:
            type: object
            properties:
              id:
                type: integer
              subject:
                type: string
        attachedRequests:
          description: Attach service requests to an incident. Use the search service requests to get list of service requests in a client.
          type: array
          items:
            type: object
            properties:
              id:
                type: string
        attachments:
          description: Attach files related to the change request. Convert attachment files to byte stream with base64-encoding. The file size limit of an attachment is 50 MB.
          type: array
          items:
            type: object
            properties:
              file:
                type: string
              name:
                type: string
        businessImpact:
          $ref: '#/components/schemas/businessImpact'
        category:
          description: Add the change request under a category. Use the get API to get the list of categories.
          type: object
          properties:
            id:
              type: integer
        cc:
          description: Cc email.
          type: string
        changePlan:
          description: |
            Description of the change plan.
          type: string
        changeType:
          description: 'Normal or Emergency depending on the Priority of a change request. For example, create a change type Emergency for change requests that must be processed immediately or if Priority of a request is High.'
          type: string
        changeRequest:
          description: Attach a problem or change request related to the incident. Only a single change request or problem can be attached to an incident.
          type: object
          properties:
            id:
              type: string
        channelId:
          type: string
        client:
          $ref: '#/components/schemas/client'
        closedSummary:
          type: string
        consoles:
          type: array
          items:
            type: object
            properties:
              type:
                type: string
                enum:
                  - MANAGEMENTCONSOLE
                  - ADMINCONSOLE
                description: Console type
              consoleProtocol:
                type: string
                enum:
                  - RDP
                  - SSH
                  - TELNET
                  - VNC
                description: |
                  Console protocol.
              options:
                type: string
                description: |
                  Console options.
        createdDate:
          format: date-time
          type: string
        createdUser:
          $ref: '#/components/schemas/user'
        customFields:
          type: array
          items:
            $ref: '#/components/schemas/customField'
        description:
          description: |
            Ticket description.
          type: string
        dueDate:
          type: string
        extTicketId:
          description: Attach third party ticket ID.
          type: string
        id:
          type: string
        knowledgeArticleIds:
          description: |-
            Attach knowledge base articles related to the change request for further reference. To get a knowledge base article ID:
            1. Log into OpsRamp.
            2. Click Knowledge Base.
            3. Select the required article and then copy the article ID.
            4. Provide the article ID in "knowledgeArticleIds" field.

            Example: "knowledgeArticleIds": 25, 16.
          type: array
          items:
            type: integer
        location:
          type: string
        notes:
          type: string
        oldPriority:
          type: string
        oldStatus:
          type: string
        parentId:
          type: string
          description: Attach incident. Provide the incident ID as an attachment.
        participantUsers:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
              loginName:
                type: string
        plannedEnd:
          format: date-time
          type: string
        plannedStart:
          format: date-time
          type: string
        policy:
          type: object
          properties:
            id:
              type: integer
            name:
              type: string
            policyType:
              type: string
            createdDate:
              type: string
            updatedDate:
              type: string
            executionOrder:
              type: integer
            active:
              type: boolean
        priority:
          description: |
            Ticket priority with supported priority values: Low, Normal, High, Urgent, and Very Low.
          type: string
        priorityUpdatedBy:
          $ref: '#/components/schemas/user'
        priorityUpdatedDate:
          format: date-time
          type: string
        problem:
          description: Attach a problem or change request related to the incident. Only a single change request or problem can be attached to an incident.
          type: object
          properties:
            id:
              type: string
        reOpenCount:
          type: integer
        requester:
          $ref: '#/components/schemas/user'
        resolutionSummary:
          type: string
        resolveDate:
          type: string
          format: date-time
        resources:
          type: array
          items:
            $ref: '#/components/schemas/resource'
        rollbackPlan:
          description: |
            Description of roll back plan.
          type: string
        schedule:
          type: object
          properties:
            startTime:
              type: string
              description: |
                Schedule start time.
            endTime:
              type: string
              description: |
                Schedule end time.
            type:
              type: string
              description: |
                Schedule type.
            timezone:
              type: string
              description: |-
                Schedule time zone. The list of timezones are shown below.
                Example: "timezone": "America/Los_Angeles"
            pattern:
              description: |
                Recurrence pattern.
              type: object
              properties:
                type:
                  type: string
                  description: |
                    Recurrence pattern type.
                  enum:
                    - daily
                    - weekly
                    - monthly
                dayFrequency:
                  type: string
                  description: |
                    Day on which the time bound request should occur.
                  enum:
                    - everyday
                    - every weekday
                weekDays:
                  type: string
                  description: |
                    Weekdays on which the time bound request should occur.
                  enum:
                    - SUN
                    - MON
                    - TUE
                    - WED
                    - THU
                    - FRI
                    - SAT
                dayOfMonth:
                  type: integer
                  description: |
                    Day of the month on which time bound request should occur.
                  minimum: 1
                  maximum: 31
                weekIndex:
                  type: string
                  description: |
                    Weekdays on which the time bound request should occur every month.
                  enum:
                    - FIRST
                    - SECOND
                    - THIRD
                    - FOURTH
                    - LAST
                dayOfWeek:
                  type: string
                  description: |
                    Weekdays on which the time bound request should occur every month.
                  enum:
                    - SUN
                    - MON
                    - TUE
                    - WED
                    - THU
                    - FRI
                    - SAT
        serviceRestoreDate:
          type: string
          format: date-time
        slaDetails:
          $ref: '#/components/schemas/slaDetails'
        source:
          type: string
        sourceEntityType:
          type: string
        sourceEntityTypeId:
          type: string
        sourcePolicyType:
          type: string
        sourcePolicyTypeId:
          type: string
        status:
          type: string
        statusFlow:
          type: array
          items:
            $ref: '#/components/schemas/statusHistory'
        statusUpdatedBy:
          $ref: '#/components/schemas/user'
        statusUpdatedDate:
          format: date-time
          type: string
        subCategory:
          description: Add the change request under a sub-category. Use get categories to get the list of sub-categories.
          type: object
          properties:
            id:
              type: integer
        subject:
          description: |
            Ticket subject.
          type: string
        tags:
          type: string
        testPlan:
          description: |
            Description of test plan.
          type: string
        ticketArisedTime:
          type: string
        toEmail:
          type: string
          description: Email address of the user. An email notification is sent to the user.
        updatedDate:
          format: date-time
          type: string
        urgency:
          type: object
          properties:
            id:
              type: integer
        workEnd:
          format: date-time
          type: string
        workStart:
          format: date-time
          type: string
    category:
      title: category
      type: object
      properties:
        uniqueId:
          type: string
        name:
          type: string
        createdBy:
          $ref: '#/components/schemas/user'
        updatedBy:
          $ref: '#/components/schemas/user'
        createdDate:
          type: string
          format: date-time
        updatedDate:
          type: string
          format: date-time
        parentCategory:
          type: object
          properties:
            uniqueId:
              type: string
            name:
              type: string
      description: Add the problem/changeRequest/incident under a category. Use the get categories API to get the list of categories.
    mappingDetails:
      title: mappingDetails
      type: object
      properties:
        priority:
          type: string
        businessImpact:
          $ref: '#/components/schemas/businessImpact'
        urgency:
          $ref: '#/components/schemas/urgency'
    urgency:
      title: urgency
      type: object
      properties:
        uniqueId:
          type: string
        name:
          type: string
        description:
          type: string
        id:
          type: integer
        createdBy:
          $ref: '#/components/schemas/user'
        updatedBy:
          $ref: '#/components/schemas/user'
        createdDate:
          type: string
          format: date-time
        updatedDate:
          type: string
          format: date-time
    slaPolicy:
      title: slaPolicy
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        timezone:
          type: object
          properties:
            id:
              type: string
            name:
              type: string
            label:
              type: string
            code:
              type: string
        businessSchedule:
          type: object
          properties:
            id:
              type: integer
            shiftType:
              type: integer
            startTime:
              type: string
            endTime:
              type: string
            sunday:
              type: boolean
            monday:
              type: boolean
            tuesday:
              type: boolean
            wednesday:
              type: boolean
            thursday:
              type: boolean
            friday:
              type: boolean
            saturday:
              type: boolean
        requestType:
          type: string
        withinBussinessHours:
          type: boolean
        active:
          type: boolean
        priority:
          type: string
        createdDate:
          type: string
          format: date-time
        updatedDate:
          type: string
          format: date-time
        responseBreachTime:
          type: integer
        resolutionBreachTime:
          type: integer
        responseReminders:
          type: array
          items:
            type: object
            properties:
              reminderTime:
                type: integer
              percentage:
                type: integer
              cc:
                type: string
        resolutionReminders:
          type: array
          items:
            type: object
            properties:
              reminderTime:
                type: integer
              cc:
                type: string
        createdBy:
          $ref: '#/components/schemas/user'
        updatedBy:
          $ref: '#/components/schemas/user'
    note:
      title: note
      type: object
      properties:
        id:
          type: integer
        subject:
          type: string
        description:
          type: string
        createdTime:
          type: string
        updatedTime:
          type: string
        createdBy:
          $ref: '#/components/schemas/user'
