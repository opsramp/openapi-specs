components:
  securitySchemes:
    accessToken:
      type: oauth2
      flows:
        clientCredentials:
          tokenUrl: ''
          refreshUrl: ''
          scopes: {}
  schemas:
    user:
      title: user
      type: object
      properties:
        id:
          type: string
        loginName:
          type: string
        lastName:
          type: string
        firstName:
          type: string
        email:
          type: string
        phoneNumber:
          type: string
        mobileNumber:
          type: string
    attachment:
      title: attachment
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        createdDate:
          type: string
          format: date-time
        createdBy:
          $ref: '#/components/schemas/user'
        contentURL:
          type: string
      description: |
        (Optional) Defines the details of attachments of the article.
    category:
      title: category
      type: object
      description: |
        Name of the knowledge base category.
      properties:
        id:
          type: string
        name:
          type: string
          description: |
            Name of the knowledge base category.
        path:
          type: string
        state:
          type: string
        createdBy:
          $ref: '#/components/schemas/user'
        updatedBy:
          $ref: '#/components/schemas/user'
        createdDate:
          type: string
          format: date-time
        updatedDate:
          type: string
          format: date-time
        scope:
          type: string
          description: |-
            Defines the scope of the knowledge base category:
            For a MSP tenant, scope is either PARTNER or CLIENT
            For a CLIENT tenant, scope is not applicable
          enum:
            - PARTNER
            - CLIENT
        clientIds:
          type: array
          description: Defines the list of Client IDs. This is mandatory for a MSP tenant with CLIENT scope.
          items:
            type: string
        parentCategory:
          type: object
          description: |
            (Optional) Defines the parent category.
          properties:
            id:
              type: string
        description:
          type: string
          description: |
            (Optional) Description of the knowledge base category.
    article:
      title: article
      type: object
      description: ''
      properties:
        id:
          type: string
        subject:
          type: string
          description: |
            Defines the subject of the knowledge base article.
        content:
          type: string
          description: |
            Defines the content of the article.
        createdTime:
          type: string
          format: date-time
        updatedTime:
          type: string
          format: date-time
        createdBy:
          $ref: '#/components/schemas/user'
        updatedBy:
          $ref: '#/components/schemas/user'
        shared:
          type: boolean
        category:
          $ref: '#/components/schemas/category'
        state:
          type: string
          description: |-
            (Optional) Defines the published status of the article.
            Example: PUBLISH, DRAFT
        attachments:
          type: array
          items:
            $ref: '#/components/schemas/attachment'
        expiryDate:
          type: string
          format: date-time
          description: |-
            (Optional) Defines the expiry date of the article.
            Date format: yyyy-MM-ddTHH:mm:ssZ.
            Example: 2019-07-07T09:19:47 0000 (GMT)
        linkedArticles:
          type: array
          description: |
            (Optional) Defines the list of linked articles of the article.
          items:
            type: object
            properties:
              id:
                type: string
              subject:
                type: string
              shared:
                type: boolean
      required:
        - subject
        - content
    comment:
      title: comment
      type: object
      properties:
        comment:
          type: string
        createdTime:
          type: string
          format: date-time
        createdUser:
          $ref: '#/components/schemas/user'
        attachments:
          type: array
          items:
            $ref: '#/components/schemas/attachment'
    generalInfo:
      title: generalInfo
      type: object
      properties:
        ipAddresses:
          type: string
        hostName:
          type: string
        osName:
          type: string
        osBuildNumber:
          type: string
    resource:
      title: resource
      type: object
      properties:
        id:
          type: string
        generalInfo:
          $ref: "#/components/schemas/generalInfo"
        clientUniqueId:
          type: string
        type:
          type: string
    entities:
      title: entities
      type: array
      items:
        type: object
        properties:
          resource:
            $ref: "#/components/schemas/resource"
    pattern:
      title: pattern
      type: object
      properties:
        type:
          type: string
          description: Recurrence pattern type.
          enum:
            - daily
            - weekly
            - monthly
            - never
            - run once
        frequency:
          type: string
          description: |
            Days on which the schedule is applied. Frequency is dependent on recurrence pattern type. Example: Provide type as weekly, then frequency is the day on which the job is run.
          enum:
            - everyday
            - every weekday
            - recurrence
        repeatType:
          type: string
          description: 
              Run the job constantly on specific days.
          enum:
            - days
        weekDays:
          type: string
          description: |
            Days on which the job is run.
          enum:
            - Sunday
            - Monday
            - Tuesday
            - Wednesday
            - Thursday
            - Saturday
        dayOfMonth:
          type: string
          description: |
            Day on which the job is scheduled to run every month. Days range between 1 to 31. Example: Provide dayOfMonth as 4, then the job is run on the 4th day of every month.
          minLength: 1
          maxLength: 31
        weekIndex:
          type: string
          description: |
            Week on which the job is run. Example: First Monday.
          enum:
            - First
            - Second
            - Third
            - Fourth
            - Last
        dayOfIndex:
          type: string
          description: |
            Day on which the job is scheduled to run. Example: Provide weekIndex as First and dayOfMonth as Sunday, this indicates that job is run on every month First Sunday.
          enum:
            - Sunday
            - Monday
            - Tuesday
            - Wednesday
            - Thursday
            - Friday
            - Saturday
        repeatFrequency:
          type: integer
    schedule:
      title: schedule
      type: object
      properties:
        startDate:
          type: string
          format: date-time
        pattern:
          $ref: "#/components/schemas/pattern"
    approvalType:
      title: approvalType
      type: object
      description: Approval for the job type App Install
      properties:
        approvalType:
          type: integer
          description: |
            Approval type required to install the app. Example: Provide 0 as approvalType which indicates app is manually installed.
          minimum: 0
          maximum: 1
        approvalReason:
          type: string
          description: |
            Reason for approval of installing app.
        alertRequired:
          type: boolean
    customScript:
      title: customScript
      type: object
      description: Script ID for the job type Custom Script
      properties:
        id:
          type: string
          description: |
            Custom script ID.
        name:
          type: string
        description:
          type: string
        platforms:
          type: array
          items:
            type: string
    configParams:
      title: configParams
      type: object
      description: Parameters to configure for the job type Network Backup Configuration
      properties:
        versionsSaved:
          type: string
          enum:
            - ALL_VERSIONS
            - VERSION_WITH_CHANGES
          description: |
            Take Backup of versions saved.
        backUpTrigger:
          type: boolean
          description: |
            Perform a backup on the receipt of a configuration change SNMP Trap.
        startupConfigAlert:
          type: boolean
          description: |
            Generate alerts on changes to startup configuration.
        runConfigAlert:
          type: boolean
          description: |
            Generate alerts on changes to runtime configuration.
        startUpConfigFilesBackUp:
          type: boolean
          description: |
            Startup configuration file to be backed up.
        runTimeConfigFilesBackUp:
          type: boolean
          description: |
            Runtime configuration file to be backed up.
    script:
      title: script
      type: object
      properties:
        jobType:
          type: string
          description: "Job type. To view job types that OpsRamp supports, see Get Job Types API."
          enum:
            - adCheckList
            - networkconfigbackup
            - appinstall
            - custom
        userType:
          $ref: "#/components/schemas/userType"
        configParams:
          $ref: "#/components/schemas/configParams"
        approvalType:
          $ref: "#/components/schemas/approvalType"
        customScript:
          $ref: "#/components/schemas/customScript"
        parameters:
          type: array
          items:
            $ref: "#/components/schemas/parameter"
    parameter:
      title: parameter
      type: object
      properties:
        paramId:
          type: string
          description: |
            (Optional) The parameter Id.
        "value ":
          type: string
        name:
          type: string
    userType:
      title: userType
      type: integer
      minimum: 1
      maximum: 2
      description: |-
        (Optional) The user type.
        1- system user,
        2- Other user
    rba:
      title: rba
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        childs:
          type: array
          items:
            $ref: "#/components/schemas/rba"
    rbaScriptParameter:
      title: rbaScriptParameter
      type: object
      properties:
        name:
          type: string
          description: |
            Name of parameter.
        description:
          type: string
          description: |
            Description for parameter.
        defaultValue:
          type: string
          description: |
            Default Value for the parameter.
        type:
          type: string
          description: |
            Parameter is mandatory or optional.
        dataType:
          type: string
          description: |
            Data Type of the parameter.
          enum:
            - STRING
            - INTEGER
            - PASSWORD
    rbaScript:
      title: rbaScript
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        description:
          type: string
        category:
          type: object
          properties:
            id:
              type: integer
            name:
              type: string
        platforms:
          type: array
          items:
            type: string
        parameters:
          $ref: "#/components/schemas/rbaScriptParameter"
        executionType:
          type: string
        installTimeout:
          type: integer
        attachment:
          type: object
          properties:
            id:
              type: integer
            name:
              type: string
            contentURL:
              type: string
        scriptVersion:
          type: string
        registryPath:
          type: string
        registryValue:
          type: string
        processName:
          type: string
        serviceName:
          type: string
    export:
      title: export
      type: object
      properties:
        name:
          type: string
          description: |
            Name of the batch export template.
        scheduleType:
          type: string
          description: |
            Defines the schedule type. Example: ON-DEMAND.
          enum:
            - ON-DEMAND
            - RECURRING
        recurringType:
          type: string
          description: 'Defines the recurring type of batch export. Supported values: Daily, Weekly, Monthly.'
          enum:
            - Daily
            - Weekly
            - Monthly
        integrationId:
          type: string
          description: |
            Integration ID.
        type:
          type: string
          description: |
            Defines the batch type to export. Supported values: Inventory, Alerts, Tickets, Metrics.
          enum:
            - Inventory
            - Alerts
            - Tickets
            - Metrics
        startHours:
          type: string
          description: |
            Defines the starting time of daily recurring in hours. Supported values: 00 to 23.
        startMins:
          type: string
          description: |
            Defines the starting time of daily recurrence in minutes. Supported values: 00 to 59.
        startDate:
          type: string
          description: |
            Defines the starting date of monthly recurrence of batch export. Supported values: 01st to 27th or last day of the month.
        startDay:
          type: string
          description: |
            Defines the starting day of the weekly recurrence of batch export. Supported values: SUN, MON, TUE, WED, THU, FRI, SAT.
          enum:
            - SUN
            - MON
            - TUE
            - WED
            - THU
            - FRI
            - SAT
      required:
        - name
        - scheduleType
        - recurringType
        - integrationId
        - type
    rule:
      title: rule
      type: object
      properties:
        id:
          type: integer
        filterType:
          type: string
          description: |-
             Filtered resource type.
            - AWS example: AUTO_SCALING, CLOUDFRONT, DYNAMO_DB, ANY_DEVICE, ELASTICACHE, ELASTICMAPREDUCE, KINESIS, LAMBDA, LOAD_BALANCER, MACHINE_LEARNING, RDS, REDSHIFT.
            - Azure example: EBS, WEBSITE, SQL_SERVER, SQL_DATABASE, RESOURCE_GROUP, REDIS_CACHE, DOCUMENT_DB.
            - Google example: ANY_CLOUD_RESOURCE, ANY_DEVICE, EBS, GCE_CLUSTER, SQL_SERVER, SQL_DATABASE, GCE_TOPIC, GCE_SUBSCRIPTION, GCE_ROUTER, VPN.
        key:
          type: string
          description: 'Unique attribute name to filter the resource type. Example: Name, Region Name, Zone Name, Name, Subject, Description.'
        value:
          type: string
          description: Unique information of the resource.
        operator:
          type: string
          description: 'Operating values to filter the resource type. Example: Contains, Not Contains, Equals, Not Equals, Starts with, Ends with, Regex, Is.'
          enum:
            - Contains
            - Not Contains
            - Equals
            - Not Equals
            - Starts with
            - Ends with
            - Regex
        resourceType:
          type: string
          description: ''
    policy:
      title: policy
      type: object
      description: |-
        Set of functions formed together as a policy and attached with the discovery profile.
        Rules to filter the resources to which the discovery profile is attached
      properties:
        id:
          type: integer
        uid:
          type: string
        name:
          type: string
        matchType:
          type: string
        rules:
          type: array
          items:
            $ref: '#/components/schemas/rule'
        actions:
          type: array
          items:
            $ref: '#/components/schemas/action'
        entityType:
          type: string
        executionOrder:
          type: integer
    credential:
      title: credential
      type: object
      properties:
        credentialName:
          type: string
        accountId:
          type: string
        credentialType:
          type: string
        SubscriptionId:
          type: string
          description: Azure
        AzureType:
          type: string
          description: Azure
        TenantId:
          type: string
          description: Azure
        ClientID:
          type: string
          description: Azure
        SecretKey:
          type: string
          description: Azure
        Name:
          type: string
        AWSType:
          type: string
          description: 'AWS '
        Regions:
          type: string
          description: 'AWS '
        AccountNumber:
          type: string
          description: 'AWS '
        AccessKey:
          type: string
          description: 'AWS '
        SecurityKey:
          type: string
          description: 'AWS '
        AssumeRoleARN:
          type: string
          description: 'AWS '
        ExternalId:
          type: string
          description: 'AWS '
        ManagementCertificate:
          type: string
          description: Azure
        KeystorePassword:
          type: string
          description: Azure
        ServiceAccountEmail:
          type: string
          description: Google
        ProjectId:
          type: string
          description: Google
        ServiceAccountManagementCertificate:
          type: string
          description: Google
        ManagementCertificatePassPhrase:
          type: string
          description: Google
    discoveryProfile:
      title: discoveryProfile
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
          description: |
            Discovery profile name.
        installedIntegrationId:
          type: string
        credentialSet:
          type: string
          description: |
            Credential set to be assigned to the discovery profile.
        credential:
          $ref: '#/components/schemas/credential'
        policy:
          $ref: '#/components/schemas/policy'
        schedule:
          $ref: '#/components/schemas/schedule'
      required:
        - name
    schedule:
      title: schedule
      type: object
      description: '(Optional) Define the discovery time of resources:'
      properties:
        patternType:
          type: string
          description: 'Discovery schedule pattern type. Example: HOURLY, DAILY, WEEKLY, MONTHLY, MINUTES.'
        pattern:
          type: string
          description: |
            Pattern of the schedule. Example: If pattern type is WEEKLY, then pattern is MON, WED.
        startTime:
          type: string
          description: |
            Define start time of discovery.
    action:
      title: action
      type: object
      properties:
        action:
          type: string
        items:
          type: array
          items:
            type: object
            properties:
              item:
                type: string
              parameters:
                type: object
              instances:
                type: object
    httpResponse:
      title: httpResponse
      type: object
      properties:
        status:
          type: integer
        entity:
          type: string
        metadata:
          type: object
        length:
          type: integer
        headers:
          type: object
        cookies:
          type: object
        actualEntity:
          type: string
        links:
          type: array
          items: {}
        stringHeaders:
          type: object
        statusInfo:
          type: object
          properties:
            family:
              type: string
            statusCode:
              type: integer
            reasonPhrase:
              type: string
        allowedMethods:
          type: array
          items: {}
    integration:
      title: integration
      type: object
      properties:
        id:
          type: string
        name:
          type: string
    alertSource:
      title: alertSource
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        displayName:
          type: string
        techUid:
          type: string
      description: |
        Source of alert. Applicable only when installing category is Monitoring. Default Alert Source is taken as Custom.
    integrationInstall:
      title: integrationInstall
      type: object
      properties:
        id:
          type: string
        displayName:
          type: string
          description: |
            Name used to identify the integration.
        integration:
          $ref: '#/components/schemas/integration'
        category:
          type: string
          description: |-
            Category describes the behavior of custom integration. Applicable only for Custom Integration installation.
            Example: If monitoring is selected as category, the integration will work as monitoring integration.
          enum:
            - Custom
            - Collaboration
            - Monitoring
            - SSO
            - Automation
        alertSource:
          $ref: '#/components/schemas/alertSource'
        direction:
          type: string
          description: |-
            Direction of the installation. Applicable only when installing category is Collaboration.
            The default direction is taken as Inbound-Outbound.
          enum:
            - Inbound
            - Outbound
            - Inbound-Outbound
        description:
          type: string
        'inboundConfig ':
          $ref: '#/components/schemas/inboundConfig'
        'outboundConfig ':
          $ref: '#/components/schemas/outboundConfig'
        emailProps:
          type: array
          items:
            $ref: '#/components/schemas/emailProp'
        emailAddress:
          type: string
        ticketType:
          type: string
          description: |
            OpsRamp supports the following ticket types:
          enum:
            - INCIDENT
            - SERVICEREQUEST
            - CHANGE
        parentIntg:
          type: object
          properties:
            id:
              type: string
    inboundConfig:
      title: inboundConfig
      type: object
      properties:
        authentication:
          $ref: '#/components/schemas/authentication'
        mapAttributes:
          type: array
          items:
            $ref: '#/components/schemas/mapAttributes'
    authentication:
      title: authentication
      type: object
      properties:
        authType:
          type: string
          enum:
            - WEBHOOK
            - OAUTH2
          description: |
            Type of authentication.
        role:
          type: object
          description: |
            Role of the user: Mandatory only when installing category is selected as Custom. Default user role is used depending on other installing categories.
          properties:
            uniqueId:
              type: string
              description: |
                Unique ID of the role. For information on unique ID of the role, see Search Roles API.
        apiKeyPairs:
          type: array
          items:
            type: object
            properties:
              key:
                type: string
        token:
          type: string
    mapAttributes:
      title: mapAttributes
      type: object
      properties:
        name:
          type: string
          description: |
            OpsRamp attribute name.
        tenantAttrName:
          type: string
          description: |
            Third-party attribute name.
        entityType:
          type: string
          description: |
            OpsRamp entity type.
          enum:
            - ALERT
            - PROBLEM
            - INCIDENT
            - CHANGE
            - SERVICEREQUEST
            - TASK
        tenantEntityType:
          type: string
          description: |
            Third-party entity type.
        attrValues:
          type: array
          description: |
            Mapping attribute values:
          items:
            type: object
            properties:
              attrValue:
                type: string
                description: |
                  OpsRamp mapping attribute value
              tenantAttrValue:
                type: string
                description: |
                  Third-party mapping attribute value
        mode:
          type: string
    notifier:
      title: notifier
      type: object
      description: The fields are required unless specific to an `authType`.
      properties:
        type:
          type: string
          description: |
            Notification type.
          enum:
            - REST_API
            - SOAP_API
        authType:
          type: string
          description: |
            Authentication type.
          enum:
            - NONE
            - OAUTH2
            - JWT
            - BASIC
        grantType:
          type: string
          description: |
            Grant type for notification.
          enum:
            - CLIENT_CREDENTIALS
            - PASSWORD
            - REFRESH_TOKEN
        userName:
          type: string
          description: |
            Username: Mandatory when authType is OAUTH2 and grantType is PASSWORD/REFRESH_TOKEN.
        password:
          type: string
          description: |
            Password: Mandatory when authType is OAUTH2 and grantType is PASSWORD/REFRESH_TOKEN.
        apiKey:
          type: string
          description: |
            API Key: Mandatory if authType is OAUTH2.
        apiSecret:
          type: string
          description: |
            API Secret: Mandatory if authType is OAUTH2.
        accessTokenURL:
          type: string
          description: |
            Access Token URL: Mandatory if authType is OAUTH2.
        tokenPayload:
          type: object
          description: (JWT only) Payload for the token.
        tokenURL:
          type: string
          description: |
            (JWT only) Access token URI.
        tokenHeaders:
          type: array
          description: |
            (JWT only) Headers to request the token.
          items:
            type: object
            properties:
              key:
                type: string
              value:
                type: string
        tokensPath:
          type: array
          description: |
            (JWT only) Token path in the response of the authentication REST call.
          items:
            type: object
            properties:
              key:
                type: string
              value:
                type: string
        resourceAuthHeaders:
          description: |
            (JWT only) Authorization header for resource calls.
          type: array
          items:
            type: object
            properties:
              key:
                type: string
              value:
                type: string
        baseURI:
          type: string
    outboundConfig:
      title: outboundConfig
      type: object
      properties:
        mapAttributes:
          type: array
          items:
            $ref: '#/components/schemas/mapAttributes'
        baseNotifier:
          $ref: '#/components/schemas/notifier'
    integrationEvent:
      title: integrationEvent
      type: object
      properties:
        id:
          type: string
        name:
          type: string
          description: |
            Name of the Integration event.
        entity:
          type: string
          description: |-
            Entity on which an action is performed. Supported entities include:
            Service Desk
            INCIDENT
            SERVICEREQUEST
            CHANGE
            PROBLEM
            TASK
            Resource
            Alert
            ALERT (used only when eventType is selected as NONE)
        eventType:
          type: string
          description: |-
            Type of action performed on the entity. Supported values include:
            NONE (Used to invoke external integration through process workflow), CREATE, UPDATE, DELETE
          enum:
            - NONE
            - CREATE
            - UPDATE
            - DELETE
        notifier:
          $ref: '#/components/schemas/notifier'
        endPointURI:
          type: string
        headers:
          type: array
          items:
            type: object
            properties:
              key:
                type: string
              value:
                type: string
        thirdPartyEventType:
          type: string
          description: 'Type of action performed on the entity.Supported Values: POST, PUT, GET, DELETE, and PATCH'
          enum:
            - POST
            - PUT
            - GET
            - DELETE
            - PATCH
        payload:
          type: string
          description: |-
            (Optional) Third-party integration event payload. Provide the third-party payload with OpsRamp placeholders to integrate the event between OpsRamp and third-party:
            - To get OpsRamp tokens, use refer to the Get Integration Event Placeholders API.
            - Convert the payload to base 64 and provide the file in the field file in the below sample request.
        filterCriteria:
          $ref: '#/components/schemas/filterCritera'
        useBaseNotifier:
          type: boolean
          description: |-
            (Optional) Notification details to trigger events defined. To configure integration base notifier:
            - Provide useBaseNotifier: true to assign the notifier details to the event.
            - Provide useBaseNotifier: false to assign different notifier details
        responseHeaders:
          type: array
          items:
            type: object
            properties:
              key:
                type: string
              value:
                type: string
        depEvent:
          type: object
          properties:
            headers:
              type: array
              items:
                type: object
                properties:
                  key:
                    type: string
                  value:
                    type: string
            payload:
              type: string
            depEndPointURI:
              type: string
            responseHeaders:
              type: array
              items:
                type: object
                properties:
                  key:
                    type: string
                  value:
                    type: string
    filterCritera:
      title: filterCritera
      type: object
      description: |
        (Optional) Filter entities on which the event is added to the rules:
      properties:
        matchType:
          type: string
          enum:
            - ANY
            - ALL
          description: |
            Match All or Any of the rules.
        rules:
          type: array
          description: |
            Rules to filter the entities:
          items:
            $ref: '#/components/schemas/rule'
        id:
          type: integer
        name:
          type: string
        actions:
          type: array
          items:
            $ref: '#/components/schemas/action'
    emailCondition:
      title: emailCondition
      type: object
      description: Conditions to filter the values from the email data
      properties:
        contentSource:
          type: string
          description: Source from which the values should be considered.
          enum:
            - EMAIL_SUBJECT
            - EMAIL_CONTENT
            - DEFAULT_VALUE
        operator:
          type: string
          description: Unique keys required to filter the values from the content source.
          enum:
            - BETWEEN
            - BEFORE
            - AFTER
            - MATCHES
        startValue:
          type: string
          description: |
            Initial value.
        endValue:
          type: string
          description: |-
            End value.
            Start value and End value are filter properties. These properties are used to filter a certain value between the start value and end value.
        regexStr:
          type: string
          description: |-
            Regex string.
            Provide a regex string of the value that considered from the content source.
    emailProp:
      title: emailProp
      type: object
      properties:
        name:
          type: string
          description: |
            Name of parsing conditions set.
        identifier:
          type: string
          description: |
            Unique value of a set.Email data identifies the set with this identifier and parses with the respective parsing conditions.
        identifierSource:
          type: string
          description: |-
            Source for considering the unique value.
            Supported Values: EMAIL_SUBJECT, EMAIL_CONTENT, DEFAULT_VALUE.
          enum:
            - EMAIL_SUBJECT
            - EMAIL_CONTENT
            - DEFAULT_VALUE
        properties:
          type: array
          items:
            type: object
            properties:
              name:
                type: string
                description: |
                  Property name. Example: Alert State
              defaultValue:
                type: string
                description: |
                  Default Value is considered if any of the properties do not match with the respective configured values.
              condition:
                $ref: '#/components/schemas/emailCondition'
              propertyMappings:
                type: object
                description: Map third-party attributes with OpsRamp attributes
                properties:
                  attrValues:
                    type: array
                    items:
                      type: object
                      properties:
                        attrValue:
                          type: string
                          description: |
                            OpsRamp attribute values
                        thirdPartyAttrValue:
                          type: string
                          description: |
                            Third-party attribute values
    ssoAuth:
      title: ssoAuth
      type: object
      properties:
        type:
          type: string
          description: |
            Type of authentication.
        issueURL:
          type: string
          description: |
            URL of the SSO.
        redirectionUrl:
          type: string
          description: |
            Redirection URL.
        logoutUrl:
          type: string
          description: |
            URL displayed when user logouts.
        certificate:
          type: string
          description: |
            Certificate issued by the SSO system.
    #Tickets
    problem:
      title: problem
      type: object
      properties:
        id:
          type: string
        subject:
          type: string
          description: |
            Subject of the problem.
        description:
          type: string
          description: |
            Description of the problem.
        status:
          type: string
          description: |-
            Status of problem. Follow the steps to update the status of problem:

            1. Use the get problem API to check:
            2. Status flow transitions of problem.The status flows are defined in the field allowedStatus.
            Example: "name" : "Update"
            3. Option to provide reasons to change the status is enabled."reasonsEnabled" : "true" indicates, reason is mandatory while changing the status."reasonsEnabled" : "false" indicates reason is optional.
            4. If status change reasons are defined, use the get status change reasons to retrieve the list of reasons. Provide the reasons configured in status "Update".
        oldStatus:
          type: string
        priority:
          type: string
          description: |
            Priority of the problem.
        oldPriority:
          type: string
        requester:
          $ref: '#/components/schemas/user'
        assignedUser:
          $ref: '#/components/schemas/user'
        assigneeGroup:
          $ref: '#/components/schemas/group'
        resources:
          type: array
          items:
            $ref: '#/components/schemas/resource'
        extTicketId:
          type: string
          description: Attach an external ticket ID to the problem.
        customFields:
          type: array
          items:
            $ref: '#/components/schemas/customField'
        cc:
          type: string
          description: Cc email.
        ticketArisedTime:
          type: string
        createdUser:
          $ref: '#/components/schemas/user'
        category:
          type: object
          properties:
            id:
              type: integer
            name:
              type: string
        reason:
          type: string
        alertIds:
          type: array
          items: {}
        reOpenCount:
          type: integer
        createdDate:
          type: string
          format: date-time
        allowedStatus:
          type: array
          items:
            $ref: '#/components/schemas/status'
        client:
          $ref: '#/components/schemas/client'
        subCategory:
          type: object
          properties:
            id:
              type: integer
            name:
              type: string
        updatedDate:
          type: string
          format: date-time
        priorityUpdatedBy:
          $ref: '#/components/schemas/user'
        priorityUpdatedDate:
          type: string
          format: date-time
        statusUpdatedBy:
          $ref: '#/components/schemas/user'
        statusUpdatedDate:
          type: string
          format: date-time
        resolvedDate:
          type: string
          format: date-time
        slaDetails:
          $ref: '#/components/schemas/slaDetails'
        source:
          type: string
        rootCause:
          type: string
          description: Root cause of the problem.
        workaround:
          type: string
          description: Temporary solution to solve the problem.
        application:
          type: string
          description: |
            Application from which the problem is generated.
        statusFlow:
          type: array
          items:
            $ref: '#/components/schemas/statusHistory'
        knowledgeArticleIds:
          type: array
          description: |-
            (Optional) Attach knowledge base articles related to the problem for further reference. To retrieve a knowledge base article ID:
            1. Log into OpsRamp.
            2. Click Knowledge Base.
            3. Select the required article and then copy the article ID.
            4. Provide the article ID in "knowledgeArticleIds" field.
            Example: "knowledgeArticleIds": 25, 16.
          items:
            type: integer
        attachedArticles:
          type: array
          items:
            type: object
            properties:
              id:
                type: integer
              subject:
                type: string
        estimatedHours:
          type: integer
          description: 'Estimated time for resolving a problem. For example, a user estimates 3 hours for completion of a problem, the user provides value as "estimatedHours": "3".'
        estimatedMinutes:
          type: integer
          description: 'Estimated time for resolving a problem. For example, a user estimates 45 minutes for completion of a task, then user provides value as "estimatedMinutes": "45".'
        timeSpent:
          type: integer
        notes:
          type: string
        closedSummary:
          type: string
        suspendEndDate:
          type: string
          format: date-time
        closedDate:
          type: string
        tags:
          type: string
        changeRequest:
          description: Attach a problem related to the problem.
          type: object
          properties:
            id:
              type: string
        knownIssue:
          type: boolean
        attachments:
          type: array
          items:
            $ref: ./knowledge-base.v1.yaml#/components/schemas/attachment
        channelId:
          type: integer
    user:
      title: user
      type: object
      properties:
        id:
          type: string
        loginName:
          type: string
        lastName:
          type: string
        firstName:
          type: string
        email:
          type: string
        phoneNumber:
          type: string
    group:
      title: group
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        description:
          type: string
        userCount:
          type: integer
    resource:
      title: resource
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        type:
          type: string
        metaData:
          type: object
        resourceType:
          type: string
        hostName:
          type: string
        resourceName:
          type: string
        aliasName:
          type: string
    customField:
      title: customField
      type: object
      description: User-defined fields. User can create additional fields to attach more information related to the change request. Create a custom field and use the get change request custom fields retrieve the list of the customized fields for change request.
      properties:
        id:
          type: string
        classCode:
          type: string
        displayLabel:
          type: string
        name:
          type: string
        fieldType:
          type: string
        mandatory:
          type: boolean
        editable:
          type: boolean
        description:
          type: string
        value:
          type: string
        defaultValue:
          type: string
        options:
          type: array
          items:
            type: object
            properties:
              label:
                type: string
              value:
                type: string
        selectedOption:
          type: object
          properties:
            label:
              type: string
            value:
              type: string
        customField:
          type: boolean
    status:
      title: status
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        reasonsEnabled:
          type: boolean
        reasonsDefined:
          type: boolean
    client:
      title: client
      type: object
      properties:
        id:
          type: integer
        uniqueId:
          type: string
        name:
          type: string
        activated:
          type: boolean
        updatedTime:
          type: string
        createdTime:
          type: string
          format: date-time
    slaDetails:
      title: slaDetails
      type: object
      properties:
        resolutionTime:
          type: integer
        responseTime:
          type: integer
        responseBreach:
          type: boolean
        resolutionBreach:
          type: boolean
        responseBreachDate:
          type: string
        resolutionBreachDate:
          type: string
        slaPolicy:
          $ref: '#/components/schemas/slaPolicy'
    statusHistory:
      title: statusHistory
      type: object
      properties:
        status:
          type: string
        timeSpent:
          type: integer
        createdDate:
          type: string
          format: date-time
        updatedBy:
          $ref: '#/components/schemas/user'
        reason:
          type: string
        notes:
          type: string
    businessImpact:
      title: businessImpact
      type: object
      properties:
        uniqueId:
          type: string
        name:
          type: string
          description: |
            Business impact name.
        description:
          type: string
          description: |
            (Optional) Short summary describing the business impact.
        createdBy:
          $ref: '#/components/schemas/user'
        updatedBy:
          $ref: '#/components/schemas/user'
        createdDate:
          type: string
          format: date-time
        updatedDate:
          type: string
          format: date-time
    activity:
      title: activity
      type: object
      properties:
        activity:
          type: string
        htmlLog:
          type: array
          items:
            type: string
        createdTime:
          type: string
          format: date-time
        logType:
          type: string
        createdBy:
          $ref: '#/components/schemas/user'
        changeLog:
          type: array
          items:
            type: object
            properties:
              attribute:
                type: string
              oldValue:
                type: string
              newValue:
                type: string
    changeRequestResponse:
      title: changeRequestResponse
      type: object
      properties:
        description:
          type: string
          description: |
            Short summary describing the response.
        internal:
          type: string
          description: |-
            (Optional) Represents the visibility of the response:

            Setting internal=true represents visibility of response within the organization

            Setting internal=false represents visibility of response to all users
        tags:
          type: string
          description: |
            (Optional) Labels attached to the response.
        creator:
          $ref: '#/components/schemas/user'
        attachments:
          type: array
          description: |
            (Optional) Attachments for the particular response.
          items:
            type: object
            properties:
              name:
                type: string
              file:
                type: string
        hasAttachments:
          type: boolean
        createdDate:
          type: string
          format: date-time
      description: ' If internal=true, creator is mandatory.'
    changeRequest:
      title: changeRequest
      type: object
      properties:
        id:
          type: string
        subject:
          type: string
          description: |
            Ticket subject.
        description:
          type: string
          description: |
            Ticket description.
        priority:
          type: string
          description: |
            Ticket priority with supported priority values: Low, Normal, High, Urgent, and Very Low.
        extTicketId:
          type: string
          description: Attach third party ticket ID.
        changePlan:
          type: string
          description: |
            Description of the change plan.
        rollbackPlan:
          type: string
          description: |
            Description of roll back plan.
        testPlan:
          type: string
          description: |
            Description of test plan.
        plannedStart:
          type: string
          format: date-time
        plannedEnd:
          type: string
          format: date-time
        workStart:
          type: string
          format: date-time
        workEnd:
          type: string
          format: date-time
        cc:
          type: string
          description: Cc email.
        category:
          type: object
          description: Add the change request under a category. Use the get API to retrieve the list of categories.
          properties:
            id:
              type: integer
        subCategory:
          type: object
          description: Add the change request under a sub-category. Use get categories to retrieve the list of sub-categories.
          properties:
            id:
              type: integer
        changeType:
          type: string
          description: 'Normal or Emergency depending on the Priority of a change request. For example, create a change type Emergency for change requests that must be processed immediately or if Priority of a request is High.'
        assigneeGroup:
          $ref: '#/components/schemas/group'
        channelId:
          type: string
        tags:
          type: string
        location:
          type: string
        assignedUser:
          $ref: '#/components/schemas/user'
        requester:
          $ref: '#/components/schemas/user'
        resources:
          type: array
          items:
            $ref: '#/components/schemas/resource'
        customFields:
          type: array
          items:
            $ref: '#/components/schemas/customField'
        attachments:
          type: array
          description: Attach files related to the change request. Convert attachment files to byte stream with base64-encoding. The file size limit of an attachment is 50 MB.
          items:
            type: object
            properties:
              name:
                type: string
              file:
                type: string
        knowledgeArticleIds:
          type: array
          description: |-
            Attach knowledge base articles related to the change request for further reference. To retrieve a knowledge base article ID:
            1. Log into OpsRamp.
            2. Click Knowledge Base.
            3. Select the required article and then copy the article ID.
            4. Provide the article ID in "knowledgeArticleIds" field.

            Example: "knowledgeArticleIds": 25, 16.
          items:
            type: integer
        oldStatus:
          type: string
        oldPriority:
          type: string
        ticketArisedTime:
          type: string
        createdUser:
          $ref: '#/components/schemas/user'
        alertIds:
          type: array
          items: {}
        createdDate:
          type: string
          format: date-time
        allowedStatus:
          type: array
          items:
            $ref: '#/components/schemas/status'
        client:
          $ref: '#/components/schemas/client'
        updatedDate:
          type: string
          format: date-time
        priorityUpdatedBy:
          $ref: '#/components/schemas/user'
        priorityUpdatedDate:
          type: string
          format: date-time
        statusUpdatedBy:
          $ref: '#/components/schemas/user'
        statusUpdatedDate:
          type: string
          format: date-time
        slaDetails:
          $ref: '#/components/schemas/slaDetails'
        source:
          type: string
        statusFlow:
          type: array
          items:
            $ref: '#/components/schemas/statusHistory'
        attachedArticles:
          type: array
          items:
            type: object
            properties:
              id:
                type: integer
              subject:
                type: string
      required:
        - subject
        - description
        - priority
        - changePlan
        - rollbackPlan
        - testPlan
    incidentResponse:
      title: incidentResponse
      type: object
      properties:
        description:
          type: string
        internal:
          type: boolean
        creator:
          $ref: '#/components/schemas/user'
        tags:
          type: string
        attachments:
          type: array
          items:
            $ref: '#/components/schemas/attachment'
        extTicketResponseId:
          type: string
        createdDate:
          type: string
          format: date-time
        hasAttachments:
          type: boolean
        timeSpent:
          type: integer
    attachment:
      title: attachment
      type: object
      properties:
        name:
          type: string
        file:
          type: string
        id:
          type: integer
        createdDate:
          type: string
          format: date-time
        contentURL:
          type: string
    incident:
      title: incident
      type: object
      description: ''
      properties:
        alertIds:
          type: array
          items: {}
        allowedStatus:
          type: array
          items:
            $ref: '#/components/schemas/status'
        assignedUser:
          $ref: '#/components/schemas/user'
        assigneeGroup:
          $ref: '#/components/schemas/group'
        attachedArticles:
          type: array
          items:
            type: object
            properties:
              id:
                type: integer
              subject:
                type: string
        attachedRequests:
          description: Attach service requests to an incident. Use the search service requests to retrieve list of service requests in a client.
          type: array
          items:
            type: object
            properties:
              id:
                type: string
        attachments:
          description: Attach files related to the change request. Convert attachment files to byte stream with base64-encoding. The file size limit of an attachment is 50 MB.
          type: array
          items:
            type: object
            properties:
              file:
                type: string
              name:
                type: string
        businessImpact:
          $ref: '#/components/schemas/businessImpact'
        category:
          description: Add the change request under a category. Use the get API to retrieve the list of categories.
          type: object
          properties:
            id:
              type: integer
        cc:
          description: Cc email.
          type: string
        changePlan:
          description: |
            Description of the change plan.
          type: string
        changeType:
          description: 'Normal or Emergency depending on the Priority of a change request. For example, create a change type Emergency for change requests that must be processed immediately or if Priority of a request is High.'
          type: string
        changeRequest:
          description: Attach a problem or change request related to the incident. Only a single change request or problem can be attached to an incident.
          type: object
          properties:
            id:
              type: string
        channelId:
          type: string
        client:
          $ref: '#/components/schemas/client'
        closedSummary:
          type: string
        consoles:
          type: array
          items:
            type: object
            properties:
              type:
                type: string
                enum:
                  - MANAGEMENTCONSOLE
                  - ADMINCONSOLE
                description: Console type
              consoleProtocol:
                type: string
                enum:
                  - RDP
                  - SSH
                  - TELNET
                  - VNC
                description: |
                  Console protocol.
              options:
                type: string
                description: |
                  Console options.
        createdDate:
          format: date-time
          type: string
        createdUser:
          $ref: '#/components/schemas/user'
        customFields:
          type: array
          items:
            $ref: '#/components/schemas/customField'
        description:
          description: |
            Ticket description.
          type: string
        dueDate:
          type: string
        extTicketId:
          description: Attach third party ticket ID.
          type: string
        id:
          type: string
        knowledgeArticleIds:
          description: |-
            Attach knowledge base articles related to the change request for further reference. To retrieve a knowledge base article ID:
            1. Log into OpsRamp.
            2. Click Knowledge Base.
            3. Select the required article and then copy the article ID.
            4. Provide the article ID in "knowledgeArticleIds" field.

            Example: "knowledgeArticleIds": 25, 16.
          type: array
          items:
            type: integer
        location:
          type: string
        notes:
          type: string
        oldPriority:
          type: string
        oldStatus:
          type: string
        parentId:
          type: string
          description: Attach incident. Provide the incident ID as an attachment.
        participantUsers:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
              loginName:
                type: string
        plannedEnd:
          format: date-time
          type: string
        plannedStart:
          format: date-time
          type: string
        policy:
          type: object
          properties:
            id:
              type: integer
            name:
              type: string
            policyType:
              type: string
            createdDate:
              type: string
            updatedDate:
              type: string
            executionOrder:
              type: integer
            active:
              type: boolean
        priority:
          description: |
            Ticket priority with supported priority values: Low, Normal, High, Urgent, and Very Low.
          type: string
        priorityUpdatedBy:
          $ref: '#/components/schemas/user'
        priorityUpdatedDate:
          format: date-time
          type: string
        problem:
          description: Attach a problem or change request related to the incident. Only a single change request or problem can be attached to an incident.
          type: object
          properties:
            id:
              type: string
        reOpenCount:
          type: integer
        requester:
          $ref: '#/components/schemas/user'
        resolutionSummary:
          type: string
        resolveDate:
          type: string
          format: date-time
        resources:
          type: array
          items:
            $ref: '#/components/schemas/resource'
        rollbackPlan:
          description: |
            Description of roll back plan.
          type: string
        schedule:
          type: object
          properties:
            startTime:
              type: string
              description: |
                Schedule start time.
            endTime:
              type: string
              description: |
                Schedule end time.
            type:
              type: string
              description: |
                Schedule type.
            timezone:
              type: string
              description: |-
                Schedule time zone. The list of timezones are shown below.
                Example: "timezone": "America/Los_Angeles"
            pattern:
              description: |
                Recurrence pattern.
              type: object
              properties:
                type:
                  type: string
                  description: |
                    Recurrence pattern type.
                  enum:
                    - daily
                    - weekly
                    - monthly
                dayFrequency:
                  type: string
                  description: |
                    Day on which the time bound request should occur.
                  enum:
                    - everyday
                    - every weekday
                weekDays:
                  type: string
                  description: |
                    Weekdays on which the time bound request should occur.
                  enum:
                    - SUN
                    - MON
                    - TUE
                    - WED
                    - THU
                    - FRI
                    - SAT
                dayOfMonth:
                  type: integer
                  description: |
                    Day of the month on which time bound request should occur.
                  minimum: 1
                  maximum: 31
                weekIndex:
                  type: string
                  description: |
                    Weekdays on which the time bound request should occur every month.
                  enum:
                    - FIRST
                    - SECOND
                    - THIRD
                    - FOURTH
                    - LAST
                dayOfWeek:
                  type: string
                  description: |
                    Weekdays on which the time bound request should occur every month.
                  enum:
                    - SUN
                    - MON
                    - TUE
                    - WED
                    - THU
                    - FRI
                    - SAT
        serviceRestoreDate:
          type: string
          format: date-time
        slaDetails:
          $ref: '#/components/schemas/slaDetails'
        source:
          type: string
        sourceEntityType:
          type: string
        sourceEntityTypeId:
          type: string
        sourcePolicyType:
          type: string
        sourcePolicyTypeId:
          type: string
        status:
          type: string
        statusFlow:
          type: array
          items:
            $ref: '#/components/schemas/statusHistory'
        statusUpdatedBy:
          $ref: '#/components/schemas/user'
        statusUpdatedDate:
          format: date-time
          type: string
        subCategory:
          description: Add the change request under a sub-category. Use get categories to retrieve the list of sub-categories.
          type: object
          properties:
            id:
              type: integer
        subject:
          description: |
            Ticket subject.
          type: string
        tags:
          type: string
        testPlan:
          description: |
            Description of test plan.
          type: string
        ticketArisedTime:
          type: string
        toEmail:
          type: string
          description: Email address of the user. An email notification is sent to the user.
        updatedDate:
          format: date-time
          type: string
        urgency:
          type: object
          properties:
            id:
              type: integer
        workEnd:
          format: date-time
          type: string
        workStart:
          format: date-time
          type: string
    category:
      title: category
      type: object
      properties:
        uniqueId:
          type: string
        name:
          type: string
        createdBy:
          $ref: '#/components/schemas/user'
        updatedBy:
          $ref: '#/components/schemas/user'
        createdDate:
          type: string
          format: date-time
        updatedDate:
          type: string
          format: date-time
        parentCategory:
          type: object
          properties:
            uniqueId:
              type: string
            name:
              type: string
      description: Add the problem/changeRequest/incident under a category. Use the get categories API to retrieve the list of categories.
    mappingDetails:
      title: mappingDetails
      type: object
      properties:
        priority:
          type: string
        businessImpact:
          $ref: '#/components/schemas/businessImpact'
        urgency:
          $ref: '#/components/schemas/urgency'
    urgency:
      title: urgency
      type: object
      properties:
        uniqueId:
          type: string
        name:
          type: string
        description:
          type: string
        id:
          type: integer
        createdBy:
          $ref: '#/components/schemas/user'
        updatedBy:
          $ref: '#/components/schemas/user'
        createdDate:
          type: string
          format: date-time
        updatedDate:
          type: string
          format: date-time
    slaPolicy:
      title: slaPolicy
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        timezone:
          type: object
          properties:
            id:
              type: string
            name:
              type: string
            label:
              type: string
            code:
              type: string
        businessSchedule:
          type: object
          properties:
            id:
              type: integer
            shiftType:
              type: integer
            startTime:
              type: string
            endTime:
              type: string
            sunday:
              type: boolean
            monday:
              type: boolean
            tuesday:
              type: boolean
            wednesday:
              type: boolean
            thursday:
              type: boolean
            friday:
              type: boolean
            saturday:
              type: boolean
        requestType:
          type: string
        withinBussinessHours:
          type: boolean
        active:
          type: boolean
        priority:
          type: string
        createdDate:
          type: string
          format: date-time
        updatedDate:
          type: string
          format: date-time
        responseBreachTime:
          type: integer
        resolutionBreachTime:
          type: integer
        responseReminders:
          type: array
          items:
            type: object
            properties:
              reminderTime:
                type: integer
              percentage:
                type: integer
              cc:
                type: string
        resolutionReminders:
          type: array
          items:
            type: object
            properties:
              reminderTime:
                type: integer
              cc:
                type: string
        createdBy:
          $ref: '#/components/schemas/user'
        updatedBy:
          $ref: '#/components/schemas/user'
    note:
      title: note
      type: object
      properties:
        id:
          type: integer
        subject:
          type: string
        description:
          type: string
        createdTime:
          type: string
        updatedTime:
          type: string
        createdBy:
          $ref: '#/components/schemas/user'
