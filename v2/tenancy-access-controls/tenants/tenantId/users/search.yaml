get:
  summary: Search users
  description: |-
    This endpoint is used to fetch users within a tenant.

    >## Notes
    >- This API provides minimal user details.
    >- To retrieve the complete details of a user, use the Get User API.

    ### Query variables

    |Query Variables|Description|
    |----|----|
    |uniqueId|ID of user.|
    |loginName|Login name of user.|
    |firstName|First name of user.|
    |lastName|Last name of user.|
    |mailId|User email.|
    |startCreationDate|Filter the users created within a date range. Provide the from date.<br>Example: 2016-11-01T11:54:24 0000|
    |endCreationDate|Filter the users created within a date range. Provide the to date.<br>Example: 2016-11-03T11:54:24 0000|
    |startUpdationDate|Filter the users updated within a date range. Provide the to date.<br>Example: 2016-11-01T11:54:24 0000|
    |endUpdationDate|Filter the users updated within a date range. Provide the to date.<br>Example: 2016-11-03T11:54:24 0000|
    |status|- To retrieve a list of active users, provide status: active.<br>- To fetch list of inactive users, provide status: inactive.|

    >## Notes
    >There are special characters that can be used in a query string:
    >- (+) represents the next field and must be URL-encoded.
    >- (:) represents equals. An example is `key : value`.
    >- Space characters must be URL-encoded.
    >- Date format must be yyyy-MM-ddTHH:mm:ssZ (GMT).
  tags:
    - tenancy-access-controls
  parameters:
    - schema:
        type: integer
        default: '1'
      in: query
      name: pageNo
    - schema:
        type: integer
        default: '100'
      in: query
      name: pageSize
    - schema:
        type: string
        default: id
      in: query
      name: sortName
    - schema:
        type: boolean
        default: 'true'
      in: query
      name: isDescendingOrder
    - schema:
        type: string
      in: query
      name: queryString
  responses:
    '200':
      description: OK
      content:
        application/json:
          schema:
            type: object
            properties:
              results:
                type: array
                items:
                  $ref: './components.yaml#/components/schemas/user'
              totalResults:
                type: integer
              orderBy:
                type: string
              pageNo:
                type: integer
              pageSize:
                type: integer
              totalPages:
                type: integer
              nextPage:
                type: boolean
              nextPageNo:
                type: integer
              previousPageNo:
                type: integer
              descendingOrder:
                type: boolean
parameters:
  - $ref: '../components-global.yaml#/components/parameters/tenantId'
