summary: Manage users for user group
description: Adds, gets, and deletes users for a user group.
post:
  summary: Add users to a user group
  description: Adds users to an existing user group.
  tags:
    - tenancy-access-controls
  requestBody:
    content:
      application/json:
        schema:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
                description: |-
                  (Optional) Provide user ID to add user into the group.
                  To fetch the users within a tenant, use the Search Users API.
        examples:
          example-1:
            value:
              - id: USR0000000029
              - id: USR0000000030
  responses:
    '200':
      description: OK
delete:
  summary: Delete users from a user group
  description: Deletes users from an existing user group.
  tags:
    - tenancy-access-controls
  requestBody:
    content:
      application/json:
        schema:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
                description: |-
                  (Optional) Provide user ID to add user into the group.
                  To fetch the users within a tenant, use the Search Users API
        examples:
          example-1:
            value:
              - id: USR0000000029
              - id: USR0000000030
  responses:
    '200':
      description: OK
get:
  summary: Get users of a user group
  description: Gets users for a user group.
  tags:
    - tenancy-access-controls
  responses:
    '200':
      description: OK
      content:
        application/json:
          schema:
            type: object
            properties:
              results:
                type: array
                items:
                  $ref: './components.yaml#/components/schemas/user'
              totalResults:
                type: integer
              orderBy:
                type: string
              pageNo:
                type: integer
              pageSize:
                type: integer
              totalPages:
                type: integer
              nextPage:
                type: boolean
              previousPageNo:
                type: integer
              descendingOrder:
                type: boolean
          examples:
            example-1:
              value:
                results:
                  - id: USR0000000029
                    loginName: john.smith
                    lastName: Smith
                    firstName: John
                    email: john.smith@myorganization.com
                  - id: USR0000000014
                    loginName: james.hudson
                    lastName: Hudson
                    firstName: James
                    email: james.hudson@myorganization.com
                    phoneNumber: +805 123 1234
                totalResults: 2
                orderBy: id
                pageNo: 1
                pageSize: 100
                totalPages: 1
                nextPage: false
                previousPageNo: 0
                descendingOrder: true
  parameters:
    - schema:
        type: integer
        default: '1'
      in: query
      name: pageNo
    - schema:
        type: integer
        default: '100'
      in: query
      name: pageSize
    - schema:
        type: string
        default: id
      in: query
      name: sortName
    - schema:
        type: boolean
        default: 'true'
      in: query
      name: isDescendingOrder
parameters:
  - $ref: '#/components/parameters/tenantId'
  - schema:
      type: string
    in: path
    name: userGroupId
    required: true
