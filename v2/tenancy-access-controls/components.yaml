components:
  schemas:
    clientNote:
      title: clientNote
      type: object
      properties:
        id:
          type: integer
        subject:
          type: string
          description: |
            Subject of note.
        description:
          type: string
          description: |
            Summary describing the note.
        createdTime:
          type: string
        updatedTime:
          type: string
        startTime:
          type: string
          description: |
            Date and time from which the note is valid. This is applicable only if expiryDateType is set as 2.
        expiryTime:
          type: string
          description: |
            Date and time on which the note expires. This field is mandatory if expiryDateType is set as 2.
        expiryDateType:
          type: integer
          description: |
            Type of expiry. If expiryDateType is set as 1, it indicates Never Expire. If expiryDateType is set as 2, it indicates Validity period.
        createdBy:
          $ref: '#/components/schemas/user'
    user:
      title: user
      type: object
      properties:
        loginName:
          type: string
          description: |
            User login name.
        lastName:
          type: string
          description: |
            User last name
        firstName:
          type: string
          description: |
            User first name.
        email:
          type: string
          description: |
            Email of the user. (Alert and report notifications are sent to the email address.)
        id:
          type: string
        changePassword:
          type: boolean
        designation:
          type: string
          description: |
            (Optional) User designation.
        address:
          type: string
          description: |
            (Optional) User address.
        city:
          type: string
          description: |
            (Optional) City name.
        state:
          type: string
          description: |
            (Optional) State name.
        zip:
          type: string
          description: |
            (Optional) Zip code.
        country:
          type: string
          description: |
            Country name. To get the list of countries, use Get Countries API.
        altEmail:
          type: string
        phoneNumber:
          type: string
          description: |
            (Optional) User phone number.
        mobileNumber:
          type: string
          description: |
            (Optional) User mobile number.
        timeZone:
          type: object
          description: |-
            Time zone of the country. Use the Get Timezones API to get the list of timezones.

            Example: "timeZone": { "code": "EST"}
          properties:
            code:
              type: string
            id:
              type: string
            name:
              type: string
            label:
              type: string
        userNotifications:
          type: array
          description: |
            (Optional) Email to which the alert and report notifications are sent.
          items:
            type: object
            properties:
              notifyType:
                type: string
              notifyMethod:
                type: string
              notifyInputType:
                type: string
              notifyRecurringReport:
                type: boolean
        roles:
          type: array
          description: |
            (Optional) Defines permission sets to user and user groups on devices and device groups. Assign roles to a user. See Search Roles API to get roles created under a partner or client.
          items:
            type: object
            properties:
              name:
                type: string
              id:
                type: integer
        userGroups:
          type: array
          description: |
            (Optional) Assign users to specific user groups. Provide name of the user group.Use Search User Groups API to get details of user groups.
          items:
            type: object
            properties:
              name:
                type: string
              uniqueId:
                type: string
        "password\t":
          type: string
          description: |-
            Password must have a minimum of 7 characters with at least:
            - One number (0-9)
            - One special character (#,!, $,*)
            - One lowercase (a-z)
            - One uppercase (A-Z) character
        userAccountType:
          type: string
          description: |-
            (Optional) User account type:
            - REGULAR
            - BUSINESS
          enum:
            - REGULAR
            - BUSINESS
        userGroupType:
          type: string
          description: |-
            (Optional) Assign users to all user groups, or specific users groups. A user can also be an individual user, NOT being part of any user group.
            Supported Values: ALL, NONE
            - If a user should be part of all user groups, provide userGroupType: ALL
            - If a user should be part of a specific user group, provide user group name.
            Example:"userGroups": [{ "name": "Luminalto Admins" }]
            - If a user should NOT be part of any user group, provide userGroupType: NONE
          enum:
            - ALL
            - NONE
        authType:
          type: string
        status:
          type: string
        orgId:
          type: string
        profileImage:
          type: object
          properties:
            logoPath:
              type: string
            thumbPath:
              type: string
            tinyThumbPath:
              type: string
        organizationName:
          type: string
        createdTime:
          type: string
          format: date-time
        updatedTime:
          type: string
          format: date-time
    channel:
      title: channel
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        timeZone:
          type: string
      description: 'Channel ID. To get list of available channels, access the Get Channels API.'
    passwordPolicy:
      title: passwordPolicy
      type: object
      properties:
        defaultPolicy:
          type: boolean
        minPasswordLength:
          type: integer
        enablePasswordConstraints:
          type: boolean
        changePasswordAtFirstLogin:
          type: boolean
        passwordValidity:
          type: integer
        allowLastFourPasswords:
          type: boolean
        maxAttemptsToLockout:
          type: integer
    clientDetails:
      title: clientDetails
      type: object
      properties:
        businessStartHour:
          type: integer
          description: |
            Start of the business hour. The format is 24-hour clock notation. Example: 02, 15
        businessStartMin:
          type: integer
          description: |
            Start of the business minute.
        businessEndHour:
          type: integer
          description: |
            End of the business hour. The format is 24-hour clock notation. Example: 16, 20
        businessEndMin:
          type: integer
          description: |
            End of the business minute.
        businessDayStart:
          type: integer
          description: |
            Start of the business day. Represented in numbers. Example: 2-Monday, 6-Friday
        businessDayEnd:
          type: integer
          description: |
            End of the business day. Represented in numbers. Example: 1-Sunday, 7-Saturday
        clientTechnologies:
          type: array
          items:
            type: string
        boughtServices:
          type: array
          items:
            type: string
        remoteAccess:
          type: boolean
          description: |-
            Set as true to enable remote access module .

            Note: This feature is enabled for clients only if remote access module is enabled at partner level.
        smsVoiceNotification:
          type: boolean
          description: |
            Set as true to receive SMS Voice Notification .
    agentPolicy:
      title: agentPolicy
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
          description: |
            Name of the Agent Policy. Set enable=true to enable policies.
        policies:
          type: array
          items:
            type: object
            properties:
              id:
                type: integer
              name:
                type: string
              enable:
                type: boolean
        deviceCount:
          type: integer
    client:
      title: client
      type: object
      properties:
        uniqueId:
          type: string
        name:
          type: string
          description: |
            Name of the client.
        activated:
          type: boolean
        updatedTime:
          type: string
          format: date-time
        createdTime:
          type: string
          format: date-time
        timeZone:
          type: string
          description: |-
            Country time zone. Opsramp supports a comprehensive list of timezones.

            Example: "timeZone": "America/Los_Angeles"
        createdBy:
          $ref: '#/components/schemas/user'
        lastUpdatedBy:
          $ref: '#/components/schemas/user'
        channel:
          $ref: '#/components/schemas/channel'
        address:
          type: string
          description: |
            Address of the client.
        city:
          type: string
          description: |
            City name.
        state:
          type: string
          description: |
            State name.
        country:
          type: string
          description: 'Name of the country. To view a list of countries, access the Get Countries API.'
        zip:
          type: string
          description: |
            Zip code.
        phoneNumber:
          type: string
          description: |
            Phone number of client.
        phoneNumberExt:
          type: string
          description: |
            Phone number extension.
        mobileNumber:
          type: string
          description: |
            Mobile number of client.
        showCopyClipBoard:
          type: boolean
          description: |
            Show Copy to Clipboard.
        twoFactorAuthentication:
          type: boolean
        duoSecurity:
          type: object
          properties:
            apiHostName:
              type: string
        passwordPolicy:
          $ref: '#/components/schemas/passwordPolicy'
        mspId:
          type: string
        extOrgId:
          type: string
          description: External organization ID.
        rdp2swfState:
          type: boolean
          description: |
            A flag used that if rdp2swfState=true, converts remote console recordings to flash format.
        enableCLIRecording:
          type: boolean
          description: |
            Set enableCLIRecording=true to enable CLI recording.
        clientDetails:
          $ref: '#/components/schemas/clientDetails'
        agentPolicies:
          type: array
          items:
            $ref: '#/components/schemas/agentPolicy'
        saClient:
          type: boolean
        nableClient:
          type: boolean
        lpiClient:
          type: boolean
        ncareAgent:
          type: boolean
        ncareDevsCount:
          type: integer
        noPolicyDevsCount:
          type: integer
        allDevicesCount:
          type: integer
        nocDetails:
          type: object
          description: |
            NOC details. To get the list of available NOCs, access the Get Tenant NOCs API.
          properties:
            id:
              type: integer
            name:
              type: string
        whiteListedIps:
          type: string
          description: |-
            IP whitelisting is a security feature often used for limiting and controlling access only to trusted users. IP whitelisting allows you to create lists of trusted IP addresses or IP ranges from which your users can access your domains.

            Example: IP addresses can be of the form [172.22.22.*] or a range [172.22.2.{0-50}]
        resourceDecommission:
          type: boolean
          description: |
            A resource can be decommissioned if you do not wish to manage the resource anymore. A resource moved into decommissioned state is not re-managed. Provide resourceDecommission: true to enable the module for a client. If you do not provide any value, the default value is false.
        services:
          type: array
          description: '(Optional) List of channel services:'
          items:
            type: object
            properties:
              id:
                type: string
                description: |
                  Service ID.
              technologies:
                type: array
                description: |
                  List of technologies of the given service.
                items:
                  type: object
                  properties:
                    id:
                      type: string
        serviceAccessDetails:
          type: array
          description: |
            (Optional) List of Alternate Access Details.
          items:
            type: object
            properties:
              technology:
                type: object
                description: |
                  To get list of available technologies, use the `Get Alert Technologies` API.
                properties:
                  id:
                    type: string
              hostedManager:
                type: object
                properties:
                  accessType:
                    type: string
                    description: |
                      Access details.
                  ipAddress:
                    type: string
                    description: |
                      IP address of the hosted system.
                  userName:
                    type: string
                    description: |
                      User name required to access the hosted system.
                  password:
                    type: string
                    description: |
                      Password of the user.
                  port:
                    type: string
                    description: |
                      Port number used to access the hosted system.
                  ipRange:
                    type: string
                    description: |
                      Range of IP addresses used to access the hosted system.
        internetSPDetails:
          type: object
          properties:
            name:
              type: string
            plan:
              type: string
            circuitId:
              type: string
            memberId:
              type: string
            url:
              type: string
            userName:
              type: string
            password:
              type: string
            phone:
              type: string
        networkArchitectures:
          type: object
          properties:
            name:
              type: string
              description: |
                Name of the file.
            file:
              type: string
              description: |
                file converted to base64.
        addOns:
          description: (Optional)Client specific addOns as provided by OPSRAMP.
          type: array
          items:
            type: object
            properties:
              id:
                type: string
        packages:
          description: (Optional) Assign the client specific packages which is according to their billing
          type: array
          items:
            type: object
            properties:
              name:
                type: string

    credentialSet:
      title: credentialSet
      type: object
      properties:
        uniqueId:
          type: string
        name:
          type: string
          description: |
            Credential set name.
        secure:
          type: boolean
        port:
          type: integer
        snmpVersion:
          type: string
        description:
          type: string
        autoEnableMode:
          type: boolean
        universal:
          type: boolean
        spSecure:
          type: boolean
        spPort:
          type: integer
        timeoutMs:
          type: integer
          description: 'Time out, represented in milliseconds.'
        credentialType:
          type: string
          description: Credential type.
          enum:
            - AWS
            - SNMP
            - WINDOWS
            - VNC
            - VMWARE
        "domainName\t":
          type: string
          description: Domain name.
        userName:
          type: string
          description: Credentials of user.
        password:
          type: string
          description: Credentials of user.
        transportType:
          type: string
          description: Transport layer type.
          enum:
            - HTTP
            - SNMP
            - SSH
            - TELNET
        community:
          type: string
        spUserName:
          type: string
        spPassword:
          type: string
        spAuthScope:
          type: string
        fileAuthScope:
          type: string
        esxUserName:
          type: string
        esxPassword:
          type: string
        spNameSpace:
          type: string
        authProtocol:
          type: string
        encryptPassword:
          type: string
        snmpContext:
          type: string
        securityLevel:
          type: string
          description: Security level.
          enum:
            - NOAUTHNOPRIV
            - AUTHPRIV
            - AUTHNOPRIV
            - BASIC
            - OAUTH2
        securityName:
          type: string
        apiEndPoint:
          type: string
        accountId:
          type: string
        accountName:
          type: string
        accountKey:
          type: string
        managementCertificate:
          type: string
        managementCertificatePassphrase:
          type: string
        sshCredentialType:
          type: string
          description: SSH credential type.
          enum:
            - PASSWORD
            - KEYPAIR
        collectorType:
          type: string
          description: Collector type.
          enum:
            - API
            - CLI
            - APIANDCLI
            - SMIS
            - UNKNOWN
        assignedDevices:
          type: array
          items:
            $ref: '#/components/schemas/device'
        enablePassword:
          type: string
        syncDataTS:
          type: integer
        assignedUsers:
          type: array
          items:
            $ref: '#/components/schemas/user'
        assignedDeviceGroups:
          type: array
          items:
            $ref: '#/components/schemas/deviceGroup'
    device:
      title: device
      type: object
      properties:
        id:
          type: string
        generalInfo:
          type: object
          properties:
            osName:
              type: string
            ipAddresses:
              type: string
            hostName:
              type: string
            dns:
              type: string
            deviceType:
              type: string
            macAddress:
              type: string
            createdTime:
              type: string
              format: date-time
            updatedTime:
              type: string
              format: date-time
        bios:
          type: object
        status:
          type: string
        state:
          type: string
        clientUniqueId:
          type: string
        ipAddress:
          type: string
        type:
          type: string
        uniqueId:
          type: string
    deviceGroup:
      title: deviceGroup
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        description:
          type: string
        client:
          type: object
          properties:
            id:
              type: integer
            uniqueId:
              type: string
            name:
              type: string
            activated:
              type: boolean
        assignDevices:
          type: array
          items:
            $ref: '#/components/schemas/device'
        createdTime:
          type: integer
        updatedTime:
          type: integer
        deviceCount:
          type: integer
    role:
      title: role
      type: object
      properties:
        id:
          type: string
        name:
          type: string
          description: |
            Role name.
        description:
          type: string
          description: |
            (Optional) Short summary describing a role.
        scope:
          type: string
          description: |-
            (Optional) Define the applicability of a role.
            - Provide scope: MSP to create a partner-level role.
            Note: MSP indicates a Partner.
            - Provide scope: CLIENT  to create a client-level role.
          enum:
            - MSP
            - CLIENT
        users:
          description: |-
            (Optional) Assign users to a role.
            Note:
            - Only partner users can be assigned to a partner specific role.
            - Only client users can be assigned a client specific role.
          type: array
          items:
            $ref: '#/components/schemas/user'
        userGroups:
          description: |-
            (Optional) Assign users to a role.
            Note:
            - Only partner users can be assigned to a partner specific role.
            - Only client users can be assigned a client specific role.
          type: array
          items:
            type: object
            properties:
              name:
                type: string
              description:
                type: string
              uniqueId:
                type: string
        clients:
          description: |-
            (Optional) Configure the visibility of clients for users in a role:
            - For partner-level users: To allow users of a role to view specific clients, provide the respective client IDs.
            Note: You can also create a role without visibility of any clients.
            - For client-level users: To assign a role to specific clients, provide the respective client IDs.
          type: array
          items:
            type: object
            properties:
              uniqueId:
                type: string
              name:
                type: string
              activated:
                type: boolean
        devices:
          description: '(Optional) Configure the visibility of devices for users in a role: A partner and client specific roles can be created with visibility to all devices, specific devices and without any devices.'
          type: array
          items:
            $ref: '#/components/schemas/device'
        allDevices:
          description: |-
            (Optional)
            - For partner specific role: To allow all users to view all client devices for a partner, provide allDevices: true.
            - For client specific role: To allow users to view all client devices, provide allDevices: true.
          type: boolean
        deviceGroups:
          description: |-
            (Optional)
            For partner specific role: To allow all users to view all client devices for a partner, provide allDevices: true.
            For client specific role: To allow users to view all client devices, provide allDevices: true.
          type: array
          items:
            $ref: '#/components/schemas/deviceGroup'
        credentialSets:
          description: '(Optional) Configure visibility of credentials sets for users in a role: A partner or client specific role can be created to allow users in a role to view all credentials, specific credentials, or no credentials.'
          type: array
          items:
            $ref: '#/components/schemas/credentialSet'
        allCredentials:
          description: |-
            (Optional)
            - For partner specific role: To allow users in a role to view all credentials sets of all clients for a partner, provide allCredentials: true.
            - For client specific role: To allow users in a role to view all credential sets of all clients, provide allCredentials: true.

            Credential sets are client-specific. To allow users in a role to view only specific credential sets, provide only the credential set IDs of the client provided in clients.
          type: boolean
        permissions:
          description: (Optional) Assign permission sets to a role. All users in a role would be assigned these permissions. Search Permissions Sets API is used to get the list of permissions for a partner or client.
          type: array
          items:
            type: object
            properties:
              id:
                type: integer
              name:
                type: string
              description:
                type: string
        defaultRole:
          type: boolean
    userGroup:
      title: userGroup
      type: object
      properties:
        uniqueId:
          type: string
        name:
          type: string
          description: |
            User group name.
        description:
          type: string
          description: |
            (Optional) Short summary describing the user group.
        createdTime:
          type: string
          format: date-time
        updatedTime:
          type: string
          format: date-time
        email:
          type: string
          format: email
          description: |
            (Optional) User group email address.
        roles:
          type: array
          description: |
            (Optional) Assign roles to user group. Users part of a group automatically inherit the permissions associated with that group. To get roles within a tenant, use Search Roles API.
          items:
            $ref: '#/components/schemas/role'
